/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 86.0, "minX": 0.0, "maxY": 69179.0, "series": [{"data": [[0.0, 87.0], [0.1, 87.0], [0.2, 88.0], [0.3, 89.0], [0.4, 89.0], [0.5, 89.0], [0.6, 89.0], [0.7, 89.0], [0.8, 90.0], [0.9, 90.0], [1.0, 90.0], [1.1, 90.0], [1.2, 90.0], [1.3, 90.0], [1.4, 90.0], [1.5, 90.0], [1.6, 90.0], [1.7, 90.0], [1.8, 90.0], [1.9, 91.0], [2.0, 91.0], [2.1, 91.0], [2.2, 91.0], [2.3, 91.0], [2.4, 91.0], [2.5, 91.0], [2.6, 91.0], [2.7, 91.0], [2.8, 91.0], [2.9, 91.0], [3.0, 91.0], [3.1, 92.0], [3.2, 92.0], [3.3, 92.0], [3.4, 92.0], [3.5, 92.0], [3.6, 92.0], [3.7, 92.0], [3.8, 92.0], [3.9, 92.0], [4.0, 93.0], [4.1, 93.0], [4.2, 93.0], [4.3, 93.0], [4.4, 93.0], [4.5, 93.0], [4.6, 93.0], [4.7, 93.0], [4.8, 93.0], [4.9, 93.0], [5.0, 93.0], [5.1, 93.0], [5.2, 93.0], [5.3, 94.0], [5.4, 94.0], [5.5, 94.0], [5.6, 94.0], [5.7, 94.0], [5.8, 94.0], [5.9, 94.0], [6.0, 94.0], [6.1, 94.0], [6.2, 94.0], [6.3, 94.0], [6.4, 94.0], [6.5, 94.0], [6.6, 94.0], [6.7, 94.0], [6.8, 94.0], [6.9, 94.0], [7.0, 94.0], [7.1, 94.0], [7.2, 94.0], [7.3, 95.0], [7.4, 95.0], [7.5, 95.0], [7.6, 95.0], [7.7, 95.0], [7.8, 95.0], [7.9, 95.0], [8.0, 95.0], [8.1, 95.0], [8.2, 95.0], [8.3, 95.0], [8.4, 95.0], [8.5, 95.0], [8.6, 95.0], [8.7, 95.0], [8.8, 95.0], [8.9, 95.0], [9.0, 95.0], [9.1, 95.0], [9.2, 95.0], [9.3, 95.0], [9.4, 96.0], [9.5, 96.0], [9.6, 96.0], [9.7, 96.0], [9.8, 96.0], [9.9, 96.0], [10.0, 96.0], [10.1, 96.0], [10.2, 96.0], [10.3, 96.0], [10.4, 97.0], [10.5, 97.0], [10.6, 97.0], [10.7, 97.0], [10.8, 97.0], [10.9, 97.0], [11.0, 97.0], [11.1, 97.0], [11.2, 97.0], [11.3, 97.0], [11.4, 97.0], [11.5, 97.0], [11.6, 97.0], [11.7, 97.0], [11.8, 97.0], [11.9, 98.0], [12.0, 98.0], [12.1, 98.0], [12.2, 98.0], [12.3, 98.0], [12.4, 98.0], [12.5, 98.0], [12.6, 98.0], [12.7, 98.0], [12.8, 98.0], [12.9, 98.0], [13.0, 98.0], [13.1, 98.0], [13.2, 98.0], [13.3, 99.0], [13.4, 99.0], [13.5, 99.0], [13.6, 99.0], [13.7, 99.0], [13.8, 99.0], [13.9, 99.0], [14.0, 99.0], [14.1, 99.0], [14.2, 99.0], [14.3, 99.0], [14.4, 99.0], [14.5, 99.0], [14.6, 99.0], [14.7, 99.0], [14.8, 99.0], [14.9, 99.0], [15.0, 99.0], [15.1, 99.0], [15.2, 100.0], [15.3, 100.0], [15.4, 100.0], [15.5, 100.0], [15.6, 100.0], [15.7, 100.0], [15.8, 100.0], [15.9, 100.0], [16.0, 100.0], [16.1, 100.0], [16.2, 100.0], [16.3, 100.0], [16.4, 100.0], [16.5, 100.0], [16.6, 100.0], [16.7, 100.0], [16.8, 100.0], [16.9, 100.0], [17.0, 100.0], [17.1, 100.0], [17.2, 101.0], [17.3, 101.0], [17.4, 101.0], [17.5, 101.0], [17.6, 101.0], [17.7, 101.0], [17.8, 101.0], [17.9, 101.0], [18.0, 101.0], [18.1, 101.0], [18.2, 101.0], [18.3, 101.0], [18.4, 101.0], [18.5, 101.0], [18.6, 101.0], [18.7, 101.0], [18.8, 102.0], [18.9, 102.0], [19.0, 102.0], [19.1, 102.0], [19.2, 102.0], [19.3, 102.0], [19.4, 102.0], [19.5, 102.0], [19.6, 102.0], [19.7, 102.0], [19.8, 102.0], [19.9, 102.0], [20.0, 102.0], [20.1, 102.0], [20.2, 102.0], [20.3, 102.0], [20.4, 102.0], [20.5, 102.0], [20.6, 102.0], [20.7, 102.0], [20.8, 102.0], [20.9, 102.0], [21.0, 102.0], [21.1, 102.0], [21.2, 102.0], [21.3, 102.0], [21.4, 103.0], [21.5, 103.0], [21.6, 103.0], [21.7, 103.0], [21.8, 103.0], [21.9, 103.0], [22.0, 103.0], [22.1, 103.0], [22.2, 103.0], [22.3, 103.0], [22.4, 103.0], [22.5, 103.0], [22.6, 103.0], [22.7, 103.0], [22.8, 103.0], [22.9, 103.0], [23.0, 104.0], [23.1, 104.0], [23.2, 104.0], [23.3, 104.0], [23.4, 104.0], [23.5, 104.0], [23.6, 104.0], [23.7, 104.0], [23.8, 104.0], [23.9, 104.0], [24.0, 104.0], [24.1, 104.0], [24.2, 105.0], [24.3, 105.0], [24.4, 105.0], [24.5, 105.0], [24.6, 105.0], [24.7, 105.0], [24.8, 105.0], [24.9, 105.0], [25.0, 105.0], [25.1, 105.0], [25.2, 105.0], [25.3, 105.0], [25.4, 105.0], [25.5, 105.0], [25.6, 105.0], [25.7, 105.0], [25.8, 105.0], [25.9, 105.0], [26.0, 105.0], [26.1, 105.0], [26.2, 105.0], [26.3, 106.0], [26.4, 106.0], [26.5, 106.0], [26.6, 106.0], [26.7, 106.0], [26.8, 106.0], [26.9, 106.0], [27.0, 106.0], [27.1, 106.0], [27.2, 106.0], [27.3, 106.0], [27.4, 106.0], [27.5, 106.0], [27.6, 106.0], [27.7, 106.0], [27.8, 107.0], [27.9, 107.0], [28.0, 107.0], [28.1, 107.0], [28.2, 107.0], [28.3, 107.0], [28.4, 107.0], [28.5, 107.0], [28.6, 107.0], [28.7, 107.0], [28.8, 107.0], [28.9, 107.0], [29.0, 108.0], [29.1, 108.0], [29.2, 108.0], [29.3, 108.0], [29.4, 108.0], [29.5, 108.0], [29.6, 108.0], [29.7, 108.0], [29.8, 108.0], [29.9, 108.0], [30.0, 108.0], [30.1, 108.0], [30.2, 108.0], [30.3, 108.0], [30.4, 108.0], [30.5, 108.0], [30.6, 108.0], [30.7, 109.0], [30.8, 109.0], [30.9, 109.0], [31.0, 109.0], [31.1, 109.0], [31.2, 109.0], [31.3, 109.0], [31.4, 109.0], [31.5, 109.0], [31.6, 109.0], [31.7, 109.0], [31.8, 109.0], [31.9, 109.0], [32.0, 110.0], [32.1, 110.0], [32.2, 110.0], [32.3, 110.0], [32.4, 110.0], [32.5, 110.0], [32.6, 110.0], [32.7, 110.0], [32.8, 110.0], [32.9, 110.0], [33.0, 110.0], [33.1, 110.0], [33.2, 110.0], [33.3, 110.0], [33.4, 110.0], [33.5, 110.0], [33.6, 111.0], [33.7, 111.0], [33.8, 111.0], [33.9, 111.0], [34.0, 111.0], [34.1, 111.0], [34.2, 111.0], [34.3, 111.0], [34.4, 111.0], [34.5, 112.0], [34.6, 112.0], [34.7, 112.0], [34.8, 112.0], [34.9, 112.0], [35.0, 112.0], [35.1, 112.0], [35.2, 112.0], [35.3, 112.0], [35.4, 112.0], [35.5, 112.0], [35.6, 112.0], [35.7, 112.0], [35.8, 113.0], [35.9, 113.0], [36.0, 113.0], [36.1, 113.0], [36.2, 113.0], [36.3, 113.0], [36.4, 113.0], [36.5, 113.0], [36.6, 113.0], [36.7, 113.0], [36.8, 113.0], [36.9, 113.0], [37.0, 113.0], [37.1, 114.0], [37.2, 114.0], [37.3, 114.0], [37.4, 114.0], [37.5, 114.0], [37.6, 114.0], [37.7, 114.0], [37.8, 114.0], [37.9, 114.0], [38.0, 114.0], [38.1, 114.0], [38.2, 114.0], [38.3, 114.0], [38.4, 114.0], [38.5, 115.0], [38.6, 115.0], [38.7, 115.0], [38.8, 115.0], [38.9, 115.0], [39.0, 115.0], [39.1, 115.0], [39.2, 115.0], [39.3, 115.0], [39.4, 115.0], [39.5, 115.0], [39.6, 115.0], [39.7, 115.0], [39.8, 115.0], [39.9, 116.0], [40.0, 116.0], [40.1, 116.0], [40.2, 116.0], [40.3, 116.0], [40.4, 116.0], [40.5, 116.0], [40.6, 116.0], [40.7, 116.0], [40.8, 116.0], [40.9, 116.0], [41.0, 116.0], [41.1, 116.0], [41.2, 116.0], [41.3, 116.0], [41.4, 116.0], [41.5, 117.0], [41.6, 117.0], [41.7, 117.0], [41.8, 117.0], [41.9, 117.0], [42.0, 117.0], [42.1, 117.0], [42.2, 117.0], [42.3, 118.0], [42.4, 118.0], [42.5, 118.0], [42.6, 118.0], [42.7, 118.0], [42.8, 118.0], [42.9, 118.0], [43.0, 118.0], [43.1, 118.0], [43.2, 118.0], [43.3, 119.0], [43.4, 119.0], [43.5, 119.0], [43.6, 119.0], [43.7, 119.0], [43.8, 119.0], [43.9, 119.0], [44.0, 119.0], [44.1, 119.0], [44.2, 119.0], [44.3, 120.0], [44.4, 120.0], [44.5, 120.0], [44.6, 120.0], [44.7, 120.0], [44.8, 121.0], [44.9, 121.0], [45.0, 121.0], [45.1, 121.0], [45.2, 121.0], [45.3, 121.0], [45.4, 121.0], [45.5, 121.0], [45.6, 121.0], [45.7, 121.0], [45.8, 121.0], [45.9, 121.0], [46.0, 121.0], [46.1, 122.0], [46.2, 122.0], [46.3, 122.0], [46.4, 122.0], [46.5, 122.0], [46.6, 123.0], [46.7, 123.0], [46.8, 123.0], [46.9, 123.0], [47.0, 123.0], [47.1, 123.0], [47.2, 123.0], [47.3, 123.0], [47.4, 123.0], [47.5, 123.0], [47.6, 123.0], [47.7, 123.0], [47.8, 124.0], [47.9, 124.0], [48.0, 124.0], [48.1, 124.0], [48.2, 124.0], [48.3, 124.0], [48.4, 124.0], [48.5, 124.0], [48.6, 125.0], [48.7, 125.0], [48.8, 125.0], [48.9, 125.0], [49.0, 125.0], [49.1, 125.0], [49.2, 125.0], [49.3, 125.0], [49.4, 125.0], [49.5, 126.0], [49.6, 126.0], [49.7, 126.0], [49.8, 127.0], [49.9, 127.0], [50.0, 127.0], [50.1, 127.0], [50.2, 127.0], [50.3, 127.0], [50.4, 128.0], [50.5, 128.0], [50.6, 128.0], [50.7, 128.0], [50.8, 128.0], [50.9, 129.0], [51.0, 129.0], [51.1, 129.0], [51.2, 129.0], [51.3, 129.0], [51.4, 129.0], [51.5, 129.0], [51.6, 129.0], [51.7, 129.0], [51.8, 130.0], [51.9, 130.0], [52.0, 130.0], [52.1, 130.0], [52.2, 130.0], [52.3, 130.0], [52.4, 131.0], [52.5, 131.0], [52.6, 131.0], [52.7, 131.0], [52.8, 131.0], [52.9, 131.0], [53.0, 131.0], [53.1, 132.0], [53.2, 132.0], [53.3, 132.0], [53.4, 132.0], [53.5, 132.0], [53.6, 132.0], [53.7, 132.0], [53.8, 133.0], [53.9, 133.0], [54.0, 133.0], [54.1, 133.0], [54.2, 133.0], [54.3, 133.0], [54.4, 133.0], [54.5, 133.0], [54.6, 133.0], [54.7, 134.0], [54.8, 134.0], [54.9, 134.0], [55.0, 134.0], [55.1, 134.0], [55.2, 134.0], [55.3, 134.0], [55.4, 135.0], [55.5, 135.0], [55.6, 135.0], [55.7, 135.0], [55.8, 135.0], [55.9, 135.0], [56.0, 136.0], [56.1, 136.0], [56.2, 137.0], [56.3, 137.0], [56.4, 137.0], [56.5, 137.0], [56.6, 138.0], [56.7, 138.0], [56.8, 138.0], [56.9, 138.0], [57.0, 138.0], [57.1, 138.0], [57.2, 138.0], [57.3, 138.0], [57.4, 138.0], [57.5, 139.0], [57.6, 139.0], [57.7, 139.0], [57.8, 139.0], [57.9, 139.0], [58.0, 139.0], [58.1, 139.0], [58.2, 139.0], [58.3, 139.0], [58.4, 139.0], [58.5, 139.0], [58.6, 139.0], [58.7, 140.0], [58.8, 140.0], [58.9, 140.0], [59.0, 140.0], [59.1, 140.0], [59.2, 140.0], [59.3, 140.0], [59.4, 141.0], [59.5, 141.0], [59.6, 141.0], [59.7, 141.0], [59.8, 141.0], [59.9, 141.0], [60.0, 142.0], [60.1, 142.0], [60.2, 142.0], [60.3, 142.0], [60.4, 142.0], [60.5, 143.0], [60.6, 143.0], [60.7, 143.0], [60.8, 144.0], [60.9, 144.0], [61.0, 144.0], [61.1, 144.0], [61.2, 144.0], [61.3, 144.0], [61.4, 145.0], [61.5, 145.0], [61.6, 145.0], [61.7, 146.0], [61.8, 146.0], [61.9, 146.0], [62.0, 147.0], [62.1, 147.0], [62.2, 147.0], [62.3, 147.0], [62.4, 148.0], [62.5, 148.0], [62.6, 148.0], [62.7, 148.0], [62.8, 148.0], [62.9, 148.0], [63.0, 148.0], [63.1, 148.0], [63.2, 148.0], [63.3, 148.0], [63.4, 149.0], [63.5, 149.0], [63.6, 149.0], [63.7, 150.0], [63.8, 150.0], [63.9, 150.0], [64.0, 150.0], [64.1, 150.0], [64.2, 150.0], [64.3, 150.0], [64.4, 151.0], [64.5, 151.0], [64.6, 151.0], [64.7, 151.0], [64.8, 152.0], [64.9, 152.0], [65.0, 152.0], [65.1, 152.0], [65.2, 152.0], [65.3, 153.0], [65.4, 153.0], [65.5, 153.0], [65.6, 153.0], [65.7, 154.0], [65.8, 154.0], [65.9, 154.0], [66.0, 155.0], [66.1, 155.0], [66.2, 155.0], [66.3, 155.0], [66.4, 155.0], [66.5, 156.0], [66.6, 156.0], [66.7, 156.0], [66.8, 157.0], [66.9, 157.0], [67.0, 157.0], [67.1, 157.0], [67.2, 157.0], [67.3, 157.0], [67.4, 157.0], [67.5, 158.0], [67.6, 158.0], [67.7, 158.0], [67.8, 159.0], [67.9, 159.0], [68.0, 159.0], [68.1, 159.0], [68.2, 161.0], [68.3, 161.0], [68.4, 163.0], [68.5, 163.0], [68.6, 163.0], [68.7, 163.0], [68.8, 164.0], [68.9, 164.0], [69.0, 164.0], [69.1, 164.0], [69.2, 165.0], [69.3, 166.0], [69.4, 166.0], [69.5, 166.0], [69.6, 167.0], [69.7, 167.0], [69.8, 167.0], [69.9, 167.0], [70.0, 167.0], [70.1, 168.0], [70.2, 169.0], [70.3, 169.0], [70.4, 169.0], [70.5, 169.0], [70.6, 170.0], [70.7, 170.0], [70.8, 170.0], [70.9, 170.0], [71.0, 171.0], [71.1, 171.0], [71.2, 172.0], [71.3, 172.0], [71.4, 172.0], [71.5, 172.0], [71.6, 172.0], [71.7, 172.0], [71.8, 172.0], [71.9, 173.0], [72.0, 173.0], [72.1, 174.0], [72.2, 175.0], [72.3, 175.0], [72.4, 176.0], [72.5, 176.0], [72.6, 176.0], [72.7, 177.0], [72.8, 178.0], [72.9, 178.0], [73.0, 178.0], [73.1, 183.0], [73.2, 184.0], [73.3, 187.0], [73.4, 187.0], [73.5, 188.0], [73.6, 188.0], [73.7, 189.0], [73.8, 189.0], [73.9, 189.0], [74.0, 191.0], [74.1, 192.0], [74.2, 194.0], [74.3, 194.0], [74.4, 195.0], [74.5, 195.0], [74.6, 195.0], [74.7, 196.0], [74.8, 197.0], [74.9, 197.0], [75.0, 199.0], [75.1, 199.0], [75.2, 200.0], [75.3, 200.0], [75.4, 201.0], [75.5, 202.0], [75.6, 203.0], [75.7, 203.0], [75.8, 204.0], [75.9, 204.0], [76.0, 204.0], [76.1, 205.0], [76.2, 206.0], [76.3, 207.0], [76.4, 208.0], [76.5, 209.0], [76.6, 209.0], [76.7, 211.0], [76.8, 212.0], [76.9, 212.0], [77.0, 212.0], [77.1, 212.0], [77.2, 213.0], [77.3, 215.0], [77.4, 215.0], [77.5, 216.0], [77.6, 216.0], [77.7, 218.0], [77.8, 220.0], [77.9, 220.0], [78.0, 220.0], [78.1, 220.0], [78.2, 221.0], [78.3, 221.0], [78.4, 222.0], [78.5, 223.0], [78.6, 224.0], [78.7, 224.0], [78.8, 225.0], [78.9, 225.0], [79.0, 225.0], [79.1, 225.0], [79.2, 225.0], [79.3, 226.0], [79.4, 227.0], [79.5, 228.0], [79.6, 229.0], [79.7, 229.0], [79.8, 230.0], [79.9, 232.0], [80.0, 233.0], [80.1, 233.0], [80.2, 233.0], [80.3, 233.0], [80.4, 235.0], [80.5, 235.0], [80.6, 236.0], [80.7, 236.0], [80.8, 237.0], [80.9, 237.0], [81.0, 240.0], [81.1, 241.0], [81.2, 242.0], [81.3, 242.0], [81.4, 242.0], [81.5, 243.0], [81.6, 243.0], [81.7, 246.0], [81.8, 246.0], [81.9, 247.0], [82.0, 248.0], [82.1, 248.0], [82.2, 250.0], [82.3, 252.0], [82.4, 252.0], [82.5, 252.0], [82.6, 254.0], [82.7, 256.0], [82.8, 256.0], [82.9, 259.0], [83.0, 259.0], [83.1, 261.0], [83.2, 261.0], [83.3, 262.0], [83.4, 262.0], [83.5, 264.0], [83.6, 265.0], [83.7, 270.0], [83.8, 270.0], [83.9, 270.0], [84.0, 271.0], [84.1, 273.0], [84.2, 275.0], [84.3, 278.0], [84.4, 278.0], [84.5, 280.0], [84.6, 283.0], [84.7, 283.0], [84.8, 284.0], [84.9, 285.0], [85.0, 287.0], [85.1, 288.0], [85.2, 289.0], [85.3, 290.0], [85.4, 291.0], [85.5, 294.0], [85.6, 294.0], [85.7, 295.0], [85.8, 295.0], [85.9, 297.0], [86.0, 300.0], [86.1, 301.0], [86.2, 302.0], [86.3, 304.0], [86.4, 306.0], [86.5, 306.0], [86.6, 307.0], [86.7, 313.0], [86.8, 316.0], [86.9, 317.0], [87.0, 318.0], [87.1, 318.0], [87.2, 320.0], [87.3, 320.0], [87.4, 322.0], [87.5, 326.0], [87.6, 326.0], [87.7, 326.0], [87.8, 331.0], [87.9, 332.0], [88.0, 333.0], [88.1, 336.0], [88.2, 346.0], [88.3, 347.0], [88.4, 350.0], [88.5, 364.0], [88.6, 364.0], [88.7, 366.0], [88.8, 366.0], [88.9, 373.0], [89.0, 374.0], [89.1, 378.0], [89.2, 389.0], [89.3, 403.0], [89.4, 416.0], [89.5, 421.0], [89.6, 424.0], [89.7, 432.0], [89.8, 446.0], [89.9, 448.0], [90.0, 452.0], [90.1, 460.0], [90.2, 462.0], [90.3, 466.0], [90.4, 477.0], [90.5, 481.0], [90.6, 486.0], [90.7, 494.0], [90.8, 496.0], [90.9, 502.0], [91.0, 504.0], [91.1, 514.0], [91.2, 520.0], [91.3, 533.0], [91.4, 547.0], [91.5, 563.0], [91.6, 569.0], [91.7, 569.0], [91.8, 609.0], [91.9, 628.0], [92.0, 647.0], [92.1, 661.0], [92.2, 675.0], [92.3, 701.0], [92.4, 720.0], [92.5, 723.0], [92.6, 738.0], [92.7, 744.0], [92.8, 745.0], [92.9, 750.0], [93.0, 768.0], [93.1, 777.0], [93.2, 818.0], [93.3, 867.0], [93.4, 949.0], [93.5, 976.0], [93.6, 984.0], [93.7, 992.0], [93.8, 16062.0], [93.9, 16066.0], [94.0, 16276.0], [94.1, 16705.0], [94.2, 16985.0], [94.3, 18587.0], [94.4, 20872.0], [94.5, 21282.0], [94.6, 23337.0], [94.7, 24594.0], [94.8, 25994.0], [94.9, 26636.0], [95.0, 26938.0], [95.1, 27303.0], [95.2, 27376.0], [95.3, 29166.0], [95.4, 29919.0], [95.5, 30543.0], [95.6, 30577.0], [95.7, 30595.0], [95.8, 31858.0], [95.9, 31858.0], [96.0, 31892.0], [96.1, 32520.0], [96.2, 32591.0], [96.3, 32598.0], [96.4, 33156.0], [96.5, 33964.0], [96.6, 33970.0], [96.7, 34835.0], [96.8, 34868.0], [96.9, 34871.0], [97.0, 35213.0], [97.1, 35920.0], [97.2, 36122.0], [97.3, 36626.0], [97.4, 38617.0], [97.5, 40573.0], [97.6, 41025.0], [97.7, 41231.0], [97.8, 41844.0], [97.9, 41847.0], [98.0, 41933.0], [98.1, 43623.0], [98.2, 43643.0], [98.3, 44070.0], [98.4, 45054.0], [98.5, 46643.0], [98.6, 47776.0], [98.7, 48460.0], [98.8, 49104.0], [98.9, 50187.0], [99.0, 51295.0], [99.1, 52420.0], [99.2, 52477.0], [99.3, 53463.0], [99.4, 53626.0], [99.5, 53629.0], [99.6, 59655.0], [99.7, 60160.0], [99.8, 60399.0], [99.9, 61693.0]], "isOverall": false, "label": "Get All To-dos", "isController": false}, {"data": [[0.0, 91.0], [0.1, 91.0], [0.2, 91.0], [0.3, 93.0], [0.4, 95.0], [0.5, 96.0], [0.6, 96.0], [0.7, 97.0], [0.8, 99.0], [0.9, 100.0], [1.0, 101.0], [1.1, 101.0], [1.2, 102.0], [1.3, 107.0], [1.4, 107.0], [1.5, 108.0], [1.6, 108.0], [1.7, 111.0], [1.8, 112.0], [1.9, 113.0], [2.0, 116.0], [2.1, 119.0], [2.2, 141.0], [2.3, 144.0], [2.4, 149.0], [2.5, 151.0], [2.6, 151.0], [2.7, 154.0], [2.8, 154.0], [2.9, 156.0], [3.0, 156.0], [3.1, 156.0], [3.2, 157.0], [3.3, 157.0], [3.4, 157.0], [3.5, 158.0], [3.6, 158.0], [3.7, 160.0], [3.8, 160.0], [3.9, 161.0], [4.0, 161.0], [4.1, 161.0], [4.2, 162.0], [4.3, 162.0], [4.4, 162.0], [4.5, 162.0], [4.6, 163.0], [4.7, 163.0], [4.8, 163.0], [4.9, 164.0], [5.0, 164.0], [5.1, 164.0], [5.2, 164.0], [5.3, 164.0], [5.4, 165.0], [5.5, 165.0], [5.6, 165.0], [5.7, 165.0], [5.8, 165.0], [5.9, 165.0], [6.0, 166.0], [6.1, 166.0], [6.2, 166.0], [6.3, 167.0], [6.4, 167.0], [6.5, 167.0], [6.6, 167.0], [6.7, 167.0], [6.8, 167.0], [6.9, 168.0], [7.0, 168.0], [7.1, 168.0], [7.2, 168.0], [7.3, 169.0], [7.4, 169.0], [7.5, 169.0], [7.6, 169.0], [7.7, 170.0], [7.8, 170.0], [7.9, 170.0], [8.0, 170.0], [8.1, 171.0], [8.2, 171.0], [8.3, 171.0], [8.4, 171.0], [8.5, 171.0], [8.6, 171.0], [8.7, 171.0], [8.8, 172.0], [8.9, 172.0], [9.0, 172.0], [9.1, 172.0], [9.2, 172.0], [9.3, 172.0], [9.4, 172.0], [9.5, 173.0], [9.6, 173.0], [9.7, 173.0], [9.8, 173.0], [9.9, 173.0], [10.0, 174.0], [10.1, 174.0], [10.2, 174.0], [10.3, 174.0], [10.4, 174.0], [10.5, 175.0], [10.6, 175.0], [10.7, 175.0], [10.8, 175.0], [10.9, 175.0], [11.0, 175.0], [11.1, 175.0], [11.2, 176.0], [11.3, 176.0], [11.4, 176.0], [11.5, 176.0], [11.6, 177.0], [11.7, 177.0], [11.8, 177.0], [11.9, 177.0], [12.0, 177.0], [12.1, 178.0], [12.2, 178.0], [12.3, 178.0], [12.4, 179.0], [12.5, 179.0], [12.6, 179.0], [12.7, 179.0], [12.8, 179.0], [12.9, 179.0], [13.0, 179.0], [13.1, 180.0], [13.2, 180.0], [13.3, 181.0], [13.4, 181.0], [13.5, 181.0], [13.6, 181.0], [13.7, 182.0], [13.8, 182.0], [13.9, 182.0], [14.0, 182.0], [14.1, 183.0], [14.2, 183.0], [14.3, 183.0], [14.4, 183.0], [14.5, 183.0], [14.6, 184.0], [14.7, 184.0], [14.8, 184.0], [14.9, 185.0], [15.0, 185.0], [15.1, 185.0], [15.2, 185.0], [15.3, 186.0], [15.4, 186.0], [15.5, 186.0], [15.6, 186.0], [15.7, 186.0], [15.8, 187.0], [15.9, 187.0], [16.0, 187.0], [16.1, 187.0], [16.2, 187.0], [16.3, 187.0], [16.4, 187.0], [16.5, 187.0], [16.6, 187.0], [16.7, 188.0], [16.8, 188.0], [16.9, 188.0], [17.0, 188.0], [17.1, 188.0], [17.2, 188.0], [17.3, 189.0], [17.4, 189.0], [17.5, 189.0], [17.6, 189.0], [17.7, 190.0], [17.8, 190.0], [17.9, 190.0], [18.0, 190.0], [18.1, 191.0], [18.2, 191.0], [18.3, 191.0], [18.4, 192.0], [18.5, 192.0], [18.6, 192.0], [18.7, 192.0], [18.8, 192.0], [18.9, 193.0], [19.0, 193.0], [19.1, 193.0], [19.2, 193.0], [19.3, 193.0], [19.4, 194.0], [19.5, 194.0], [19.6, 194.0], [19.7, 194.0], [19.8, 194.0], [19.9, 194.0], [20.0, 194.0], [20.1, 195.0], [20.2, 195.0], [20.3, 195.0], [20.4, 195.0], [20.5, 195.0], [20.6, 196.0], [20.7, 196.0], [20.8, 196.0], [20.9, 196.0], [21.0, 196.0], [21.1, 197.0], [21.2, 197.0], [21.3, 198.0], [21.4, 198.0], [21.5, 198.0], [21.6, 198.0], [21.7, 198.0], [21.8, 198.0], [21.9, 198.0], [22.0, 199.0], [22.1, 199.0], [22.2, 199.0], [22.3, 199.0], [22.4, 199.0], [22.5, 200.0], [22.6, 200.0], [22.7, 200.0], [22.8, 200.0], [22.9, 201.0], [23.0, 201.0], [23.1, 201.0], [23.2, 202.0], [23.3, 202.0], [23.4, 202.0], [23.5, 202.0], [23.6, 202.0], [23.7, 202.0], [23.8, 203.0], [23.9, 203.0], [24.0, 203.0], [24.1, 203.0], [24.2, 204.0], [24.3, 204.0], [24.4, 204.0], [24.5, 204.0], [24.6, 205.0], [24.7, 205.0], [24.8, 205.0], [24.9, 206.0], [25.0, 207.0], [25.1, 207.0], [25.2, 207.0], [25.3, 208.0], [25.4, 209.0], [25.5, 209.0], [25.6, 209.0], [25.7, 210.0], [25.8, 210.0], [25.9, 210.0], [26.0, 210.0], [26.1, 210.0], [26.2, 211.0], [26.3, 211.0], [26.4, 211.0], [26.5, 211.0], [26.6, 211.0], [26.7, 211.0], [26.8, 212.0], [26.9, 212.0], [27.0, 213.0], [27.1, 214.0], [27.2, 214.0], [27.3, 214.0], [27.4, 214.0], [27.5, 215.0], [27.6, 215.0], [27.7, 216.0], [27.8, 216.0], [27.9, 216.0], [28.0, 216.0], [28.1, 217.0], [28.2, 218.0], [28.3, 218.0], [28.4, 219.0], [28.5, 220.0], [28.6, 220.0], [28.7, 221.0], [28.8, 221.0], [28.9, 221.0], [29.0, 222.0], [29.1, 223.0], [29.2, 223.0], [29.3, 223.0], [29.4, 224.0], [29.5, 225.0], [29.6, 225.0], [29.7, 225.0], [29.8, 226.0], [29.9, 227.0], [30.0, 227.0], [30.1, 227.0], [30.2, 228.0], [30.3, 229.0], [30.4, 229.0], [30.5, 229.0], [30.6, 230.0], [30.7, 230.0], [30.8, 230.0], [30.9, 230.0], [31.0, 230.0], [31.1, 230.0], [31.2, 231.0], [31.3, 231.0], [31.4, 232.0], [31.5, 232.0], [31.6, 232.0], [31.7, 233.0], [31.8, 234.0], [31.9, 234.0], [32.0, 234.0], [32.1, 235.0], [32.2, 236.0], [32.3, 237.0], [32.4, 237.0], [32.5, 237.0], [32.6, 237.0], [32.7, 238.0], [32.8, 238.0], [32.9, 239.0], [33.0, 240.0], [33.1, 241.0], [33.2, 241.0], [33.3, 241.0], [33.4, 243.0], [33.5, 243.0], [33.6, 243.0], [33.7, 244.0], [33.8, 245.0], [33.9, 246.0], [34.0, 248.0], [34.1, 250.0], [34.2, 251.0], [34.3, 253.0], [34.4, 255.0], [34.5, 255.0], [34.6, 257.0], [34.7, 258.0], [34.8, 258.0], [34.9, 259.0], [35.0, 260.0], [35.1, 262.0], [35.2, 264.0], [35.3, 266.0], [35.4, 266.0], [35.5, 267.0], [35.6, 268.0], [35.7, 269.0], [35.8, 270.0], [35.9, 270.0], [36.0, 271.0], [36.1, 271.0], [36.2, 272.0], [36.3, 272.0], [36.4, 272.0], [36.5, 273.0], [36.6, 273.0], [36.7, 273.0], [36.8, 273.0], [36.9, 273.0], [37.0, 273.0], [37.1, 274.0], [37.2, 275.0], [37.3, 276.0], [37.4, 276.0], [37.5, 276.0], [37.6, 277.0], [37.7, 278.0], [37.8, 278.0], [37.9, 278.0], [38.0, 279.0], [38.1, 279.0], [38.2, 279.0], [38.3, 279.0], [38.4, 279.0], [38.5, 280.0], [38.6, 280.0], [38.7, 280.0], [38.8, 281.0], [38.9, 281.0], [39.0, 281.0], [39.1, 282.0], [39.2, 282.0], [39.3, 282.0], [39.4, 282.0], [39.5, 282.0], [39.6, 283.0], [39.7, 283.0], [39.8, 283.0], [39.9, 284.0], [40.0, 284.0], [40.1, 284.0], [40.2, 284.0], [40.3, 285.0], [40.4, 285.0], [40.5, 285.0], [40.6, 286.0], [40.7, 286.0], [40.8, 286.0], [40.9, 286.0], [41.0, 286.0], [41.1, 288.0], [41.2, 290.0], [41.3, 290.0], [41.4, 291.0], [41.5, 292.0], [41.6, 294.0], [41.7, 294.0], [41.8, 294.0], [41.9, 295.0], [42.0, 296.0], [42.1, 296.0], [42.2, 296.0], [42.3, 297.0], [42.4, 297.0], [42.5, 297.0], [42.6, 298.0], [42.7, 298.0], [42.8, 299.0], [42.9, 299.0], [43.0, 300.0], [43.1, 300.0], [43.2, 300.0], [43.3, 302.0], [43.4, 304.0], [43.5, 304.0], [43.6, 304.0], [43.7, 304.0], [43.8, 305.0], [43.9, 305.0], [44.0, 306.0], [44.1, 306.0], [44.2, 307.0], [44.3, 310.0], [44.4, 310.0], [44.5, 312.0], [44.6, 313.0], [44.7, 313.0], [44.8, 313.0], [44.9, 313.0], [45.0, 314.0], [45.1, 314.0], [45.2, 314.0], [45.3, 314.0], [45.4, 314.0], [45.5, 315.0], [45.6, 315.0], [45.7, 316.0], [45.8, 316.0], [45.9, 317.0], [46.0, 317.0], [46.1, 317.0], [46.2, 318.0], [46.3, 318.0], [46.4, 320.0], [46.5, 323.0], [46.6, 325.0], [46.7, 325.0], [46.8, 325.0], [46.9, 326.0], [47.0, 326.0], [47.1, 326.0], [47.2, 326.0], [47.3, 327.0], [47.4, 328.0], [47.5, 328.0], [47.6, 329.0], [47.7, 331.0], [47.8, 332.0], [47.9, 336.0], [48.0, 337.0], [48.1, 338.0], [48.2, 338.0], [48.3, 339.0], [48.4, 341.0], [48.5, 341.0], [48.6, 343.0], [48.7, 344.0], [48.8, 344.0], [48.9, 345.0], [49.0, 346.0], [49.1, 348.0], [49.2, 348.0], [49.3, 351.0], [49.4, 354.0], [49.5, 355.0], [49.6, 358.0], [49.7, 362.0], [49.8, 364.0], [49.9, 366.0], [50.0, 372.0], [50.1, 375.0], [50.2, 376.0], [50.3, 379.0], [50.4, 381.0], [50.5, 382.0], [50.6, 382.0], [50.7, 383.0], [50.8, 385.0], [50.9, 390.0], [51.0, 391.0], [51.1, 393.0], [51.2, 396.0], [51.3, 397.0], [51.4, 401.0], [51.5, 403.0], [51.6, 404.0], [51.7, 407.0], [51.8, 407.0], [51.9, 407.0], [52.0, 412.0], [52.1, 413.0], [52.2, 420.0], [52.3, 424.0], [52.4, 424.0], [52.5, 428.0], [52.6, 429.0], [52.7, 429.0], [52.8, 431.0], [52.9, 432.0], [53.0, 433.0], [53.1, 437.0], [53.2, 439.0], [53.3, 440.0], [53.4, 444.0], [53.5, 445.0], [53.6, 452.0], [53.7, 456.0], [53.8, 458.0], [53.9, 461.0], [54.0, 467.0], [54.1, 481.0], [54.2, 491.0], [54.3, 494.0], [54.4, 497.0], [54.5, 500.0], [54.6, 509.0], [54.7, 511.0], [54.8, 512.0], [54.9, 519.0], [55.0, 521.0], [55.1, 527.0], [55.2, 529.0], [55.3, 529.0], [55.4, 554.0], [55.5, 557.0], [55.6, 572.0], [55.7, 575.0], [55.8, 582.0], [55.9, 584.0], [56.0, 587.0], [56.1, 606.0], [56.2, 611.0], [56.3, 614.0], [56.4, 623.0], [56.5, 631.0], [56.6, 641.0], [56.7, 644.0], [56.8, 664.0], [56.9, 667.0], [57.0, 676.0], [57.1, 696.0], [57.2, 703.0], [57.3, 718.0], [57.4, 725.0], [57.5, 770.0], [57.6, 771.0], [57.7, 776.0], [57.8, 778.0], [57.9, 796.0], [58.0, 871.0], [58.1, 874.0], [58.2, 957.0], [58.3, 985.0], [58.4, 1024.0], [58.5, 1191.0], [58.6, 1198.0], [58.7, 2407.0], [58.8, 4924.0], [58.9, 4999.0], [59.0, 5108.0], [59.1, 5195.0], [59.2, 5210.0], [59.3, 5221.0], [59.4, 5221.0], [59.5, 5340.0], [59.6, 5413.0], [59.7, 5459.0], [59.8, 5470.0], [59.9, 5474.0], [60.0, 5492.0], [60.1, 5519.0], [60.2, 5631.0], [60.3, 5650.0], [60.4, 5681.0], [60.5, 5716.0], [60.6, 5720.0], [60.7, 5861.0], [60.8, 5949.0], [60.9, 5974.0], [61.0, 6068.0], [61.1, 6074.0], [61.2, 6088.0], [61.3, 6108.0], [61.4, 6215.0], [61.5, 6254.0], [61.6, 6282.0], [61.7, 6283.0], [61.8, 6315.0], [61.9, 6378.0], [62.0, 6398.0], [62.1, 6489.0], [62.2, 6515.0], [62.3, 6527.0], [62.4, 6543.0], [62.5, 6544.0], [62.6, 6650.0], [62.7, 6709.0], [62.8, 6731.0], [62.9, 6740.0], [63.0, 6777.0], [63.1, 6888.0], [63.2, 6892.0], [63.3, 7004.0], [63.4, 7047.0], [63.5, 7050.0], [63.6, 7071.0], [63.7, 7086.0], [63.8, 7126.0], [63.9, 7202.0], [64.0, 7238.0], [64.1, 7253.0], [64.2, 7309.0], [64.3, 7352.0], [64.4, 7421.0], [64.5, 7917.0], [64.6, 7945.0], [64.7, 8048.0], [64.8, 9134.0], [64.9, 9321.0], [65.0, 10251.0], [65.1, 10305.0], [65.2, 10378.0], [65.3, 11258.0], [65.4, 12198.0], [65.5, 12450.0], [65.6, 12561.0], [65.7, 12876.0], [65.8, 12963.0], [65.9, 13251.0], [66.0, 16067.0], [66.1, 16289.0], [66.2, 16505.0], [66.3, 16688.0], [66.4, 16714.0], [66.5, 17218.0], [66.6, 17379.0], [66.7, 17596.0], [66.8, 18143.0], [66.9, 18199.0], [67.0, 18420.0], [67.1, 18471.0], [67.2, 18704.0], [67.3, 18794.0], [67.4, 19696.0], [67.5, 19732.0], [67.6, 19774.0], [67.7, 20076.0], [67.8, 20230.0], [67.9, 20490.0], [68.0, 20747.0], [68.1, 20813.0], [68.2, 21589.0], [68.3, 21624.0], [68.4, 21692.0], [68.5, 21693.0], [68.6, 22423.0], [68.7, 22684.0], [68.8, 22914.0], [68.9, 23320.0], [69.0, 23358.0], [69.1, 23414.0], [69.2, 23437.0], [69.3, 24585.0], [69.4, 24905.0], [69.5, 24981.0], [69.6, 25696.0], [69.7, 26097.0], [69.8, 26261.0], [69.9, 26704.0], [70.0, 26708.0], [70.1, 26810.0], [70.2, 26828.0], [70.3, 27201.0], [70.4, 27340.0], [70.5, 27478.0], [70.6, 27785.0], [70.7, 27903.0], [70.8, 28155.0], [70.9, 28522.0], [71.0, 28862.0], [71.1, 29387.0], [71.2, 29472.0], [71.3, 29577.0], [71.4, 29800.0], [71.5, 29934.0], [71.6, 30040.0], [71.7, 30297.0], [71.8, 30749.0], [71.9, 30921.0], [72.0, 31297.0], [72.1, 31501.0], [72.2, 31536.0], [72.3, 32471.0], [72.4, 32492.0], [72.5, 33233.0], [72.6, 33247.0], [72.7, 33350.0], [72.8, 33395.0], [72.9, 33457.0], [73.0, 34058.0], [73.1, 34075.0], [73.2, 34601.0], [73.3, 34637.0], [73.4, 34830.0], [73.5, 35477.0], [73.6, 35681.0], [73.7, 35850.0], [73.8, 35875.0], [73.9, 35976.0], [74.0, 36382.0], [74.1, 36608.0], [74.2, 36672.0], [74.3, 37055.0], [74.4, 37340.0], [74.5, 37446.0], [74.6, 37904.0], [74.7, 38130.0], [74.8, 38433.0], [74.9, 38627.0], [75.0, 38820.0], [75.1, 39374.0], [75.2, 39569.0], [75.3, 39619.0], [75.4, 40270.0], [75.5, 40358.0], [75.6, 40623.0], [75.7, 40883.0], [75.8, 40900.0], [75.9, 41112.0], [76.0, 41351.0], [76.1, 41689.0], [76.2, 42015.0], [76.3, 42225.0], [76.4, 42415.0], [76.5, 42475.0], [76.6, 43030.0], [76.7, 43034.0], [76.8, 43055.0], [76.9, 43165.0], [77.0, 43199.0], [77.1, 43720.0], [77.2, 43768.0], [77.3, 43819.0], [77.4, 43865.0], [77.5, 44160.0], [77.6, 45210.0], [77.7, 45245.0], [77.8, 45345.0], [77.9, 45748.0], [78.0, 45963.0], [78.1, 46831.0], [78.2, 46932.0], [78.3, 47162.0], [78.4, 47180.0], [78.5, 47216.0], [78.6, 47499.0], [78.7, 47856.0], [78.8, 47960.0], [78.9, 48095.0], [79.0, 48424.0], [79.1, 48540.0], [79.2, 48991.0], [79.3, 49472.0], [79.4, 49476.0], [79.5, 50258.0], [79.6, 50668.0], [79.7, 50925.0], [79.8, 51075.0], [79.9, 51370.0], [80.0, 51443.0], [80.1, 51597.0], [80.2, 51862.0], [80.3, 51924.0], [80.4, 52023.0], [80.5, 52117.0], [80.6, 52263.0], [80.7, 52647.0], [80.8, 52657.0], [80.9, 52909.0], [81.0, 53532.0], [81.1, 53665.0], [81.2, 53775.0], [81.3, 53864.0], [81.4, 53979.0], [81.5, 54389.0], [81.6, 54597.0], [81.7, 55170.0], [81.8, 55267.0], [81.9, 55456.0], [82.0, 55899.0], [82.1, 56684.0], [82.2, 57244.0], [82.3, 57267.0], [82.4, 57491.0], [82.5, 57635.0], [82.6, 57890.0], [82.7, 58021.0], [82.8, 58065.0], [82.9, 58123.0], [83.0, 59128.0], [83.1, 59392.0], [83.2, 59393.0], [83.3, 59576.0], [83.4, 59805.0], [83.5, 59854.0], [83.6, 60086.0], [83.7, 60116.0], [83.8, 60148.0], [83.9, 60293.0], [84.0, 60310.0], [84.1, 60385.0], [84.2, 60446.0], [84.3, 60514.0], [84.4, 60569.0], [84.5, 60645.0], [84.6, 60713.0], [84.7, 60720.0], [84.8, 60800.0], [84.9, 60801.0], [85.0, 60813.0], [85.1, 60867.0], [85.2, 60897.0], [85.3, 60983.0], [85.4, 61019.0], [85.5, 61045.0], [85.6, 61075.0], [85.7, 61081.0], [85.8, 61192.0], [85.9, 61230.0], [86.0, 61268.0], [86.1, 61276.0], [86.2, 61281.0], [86.3, 61372.0], [86.4, 61526.0], [86.5, 61573.0], [86.6, 61627.0], [86.7, 61655.0], [86.8, 61716.0], [86.9, 61738.0], [87.0, 61821.0], [87.1, 61834.0], [87.2, 61911.0], [87.3, 61948.0], [87.4, 61995.0], [87.5, 62034.0], [87.6, 62066.0], [87.7, 62153.0], [87.8, 62187.0], [87.9, 62259.0], [88.0, 62377.0], [88.1, 62414.0], [88.2, 62440.0], [88.3, 62467.0], [88.4, 62485.0], [88.5, 62516.0], [88.6, 62634.0], [88.7, 62662.0], [88.8, 62663.0], [88.9, 62754.0], [89.0, 62840.0], [89.1, 62909.0], [89.2, 62963.0], [89.3, 63008.0], [89.4, 63120.0], [89.5, 63125.0], [89.6, 63129.0], [89.7, 63170.0], [89.8, 63239.0], [89.9, 63290.0], [90.0, 63310.0], [90.1, 63399.0], [90.2, 63448.0], [90.3, 63454.0], [90.4, 63601.0], [90.5, 63606.0], [90.6, 63643.0], [90.7, 63657.0], [90.8, 63664.0], [90.9, 63719.0], [91.0, 63772.0], [91.1, 63864.0], [91.2, 63902.0], [91.3, 63907.0], [91.4, 64092.0], [91.5, 64102.0], [91.6, 64118.0], [91.7, 64225.0], [91.8, 64258.0], [91.9, 64326.0], [92.0, 64333.0], [92.1, 64361.0], [92.2, 64438.0], [92.3, 64472.0], [92.4, 64559.0], [92.5, 64575.0], [92.6, 64644.0], [92.7, 64690.0], [92.8, 64789.0], [92.9, 64801.0], [93.0, 64919.0], [93.1, 64932.0], [93.2, 64985.0], [93.3, 65022.0], [93.4, 65048.0], [93.5, 65051.0], [93.6, 65061.0], [93.7, 65159.0], [93.8, 65321.0], [93.9, 65336.0], [94.0, 65391.0], [94.1, 65428.0], [94.2, 65482.0], [94.3, 65532.0], [94.4, 65571.0], [94.5, 65643.0], [94.6, 65716.0], [94.7, 65817.0], [94.8, 65896.0], [94.9, 65904.0], [95.0, 66048.0], [95.1, 66073.0], [95.2, 66088.0], [95.3, 66129.0], [95.4, 66178.0], [95.5, 66224.0], [95.6, 66230.0], [95.7, 66279.0], [95.8, 66317.0], [95.9, 66339.0], [96.0, 66339.0], [96.1, 66482.0], [96.2, 66558.0], [96.3, 66598.0], [96.4, 66703.0], [96.5, 66788.0], [96.6, 66800.0], [96.7, 66818.0], [96.8, 66834.0], [96.9, 66895.0], [97.0, 66945.0], [97.1, 66983.0], [97.2, 67061.0], [97.3, 67220.0], [97.4, 67327.0], [97.5, 67336.0], [97.6, 67561.0], [97.7, 67565.0], [97.8, 67644.0], [97.9, 67797.0], [98.0, 67870.0], [98.1, 67894.0], [98.2, 67980.0], [98.3, 68035.0], [98.4, 68191.0], [98.5, 68249.0], [98.6, 68252.0], [98.7, 68254.0], [98.8, 68381.0], [98.9, 68441.0], [99.0, 68450.0], [99.1, 68618.0], [99.2, 68681.0], [99.3, 68793.0], [99.4, 68802.0], [99.5, 68842.0], [99.6, 68973.0], [99.7, 69013.0], [99.8, 69131.0], [99.9, 69157.0], [100.0, 69179.0]], "isOverall": false, "label": "Get All Users", "isController": false}, {"data": [[0.0, 87.0], [0.1, 88.0], [0.2, 89.0], [0.3, 89.0], [0.4, 89.0], [0.5, 89.0], [0.6, 89.0], [0.7, 90.0], [0.8, 90.0], [0.9, 90.0], [1.0, 90.0], [1.1, 90.0], [1.2, 90.0], [1.3, 90.0], [1.4, 90.0], [1.5, 90.0], [1.6, 91.0], [1.7, 91.0], [1.8, 91.0], [1.9, 91.0], [2.0, 91.0], [2.1, 91.0], [2.2, 91.0], [2.3, 91.0], [2.4, 92.0], [2.5, 92.0], [2.6, 92.0], [2.7, 92.0], [2.8, 92.0], [2.9, 92.0], [3.0, 92.0], [3.1, 92.0], [3.2, 92.0], [3.3, 92.0], [3.4, 93.0], [3.5, 93.0], [3.6, 93.0], [3.7, 93.0], [3.8, 93.0], [3.9, 93.0], [4.0, 93.0], [4.1, 93.0], [4.2, 93.0], [4.3, 93.0], [4.4, 93.0], [4.5, 93.0], [4.6, 93.0], [4.7, 94.0], [4.8, 94.0], [4.9, 94.0], [5.0, 94.0], [5.1, 94.0], [5.2, 94.0], [5.3, 94.0], [5.4, 94.0], [5.5, 94.0], [5.6, 94.0], [5.7, 94.0], [5.8, 95.0], [5.9, 95.0], [6.0, 95.0], [6.1, 95.0], [6.2, 95.0], [6.3, 95.0], [6.4, 95.0], [6.5, 95.0], [6.6, 95.0], [6.7, 95.0], [6.8, 95.0], [6.9, 95.0], [7.0, 95.0], [7.1, 95.0], [7.2, 95.0], [7.3, 96.0], [7.4, 96.0], [7.5, 96.0], [7.6, 96.0], [7.7, 96.0], [7.8, 96.0], [7.9, 96.0], [8.0, 96.0], [8.1, 96.0], [8.2, 96.0], [8.3, 96.0], [8.4, 96.0], [8.5, 96.0], [8.6, 96.0], [8.7, 96.0], [8.8, 96.0], [8.9, 96.0], [9.0, 97.0], [9.1, 97.0], [9.2, 97.0], [9.3, 97.0], [9.4, 97.0], [9.5, 97.0], [9.6, 97.0], [9.7, 97.0], [9.8, 97.0], [9.9, 97.0], [10.0, 97.0], [10.1, 97.0], [10.2, 97.0], [10.3, 97.0], [10.4, 97.0], [10.5, 97.0], [10.6, 97.0], [10.7, 97.0], [10.8, 97.0], [10.9, 97.0], [11.0, 97.0], [11.1, 97.0], [11.2, 98.0], [11.3, 98.0], [11.4, 98.0], [11.5, 98.0], [11.6, 98.0], [11.7, 98.0], [11.8, 98.0], [11.9, 98.0], [12.0, 98.0], [12.1, 98.0], [12.2, 98.0], [12.3, 98.0], [12.4, 98.0], [12.5, 99.0], [12.6, 99.0], [12.7, 99.0], [12.8, 99.0], [12.9, 99.0], [13.0, 99.0], [13.1, 99.0], [13.2, 99.0], [13.3, 99.0], [13.4, 99.0], [13.5, 99.0], [13.6, 99.0], [13.7, 99.0], [13.8, 99.0], [13.9, 99.0], [14.0, 100.0], [14.1, 100.0], [14.2, 100.0], [14.3, 100.0], [14.4, 100.0], [14.5, 100.0], [14.6, 100.0], [14.7, 100.0], [14.8, 100.0], [14.9, 100.0], [15.0, 100.0], [15.1, 100.0], [15.2, 100.0], [15.3, 100.0], [15.4, 100.0], [15.5, 100.0], [15.6, 100.0], [15.7, 101.0], [15.8, 101.0], [15.9, 101.0], [16.0, 101.0], [16.1, 101.0], [16.2, 101.0], [16.3, 101.0], [16.4, 101.0], [16.5, 101.0], [16.6, 101.0], [16.7, 101.0], [16.8, 101.0], [16.9, 101.0], [17.0, 101.0], [17.1, 102.0], [17.2, 102.0], [17.3, 102.0], [17.4, 102.0], [17.5, 102.0], [17.6, 102.0], [17.7, 102.0], [17.8, 102.0], [17.9, 102.0], [18.0, 102.0], [18.1, 102.0], [18.2, 102.0], [18.3, 102.0], [18.4, 102.0], [18.5, 102.0], [18.6, 102.0], [18.7, 103.0], [18.8, 103.0], [18.9, 103.0], [19.0, 103.0], [19.1, 103.0], [19.2, 103.0], [19.3, 103.0], [19.4, 103.0], [19.5, 103.0], [19.6, 103.0], [19.7, 103.0], [19.8, 103.0], [19.9, 103.0], [20.0, 103.0], [20.1, 103.0], [20.2, 103.0], [20.3, 104.0], [20.4, 104.0], [20.5, 104.0], [20.6, 104.0], [20.7, 104.0], [20.8, 104.0], [20.9, 104.0], [21.0, 104.0], [21.1, 104.0], [21.2, 104.0], [21.3, 104.0], [21.4, 104.0], [21.5, 104.0], [21.6, 104.0], [21.7, 104.0], [21.8, 104.0], [21.9, 105.0], [22.0, 105.0], [22.1, 105.0], [22.2, 105.0], [22.3, 105.0], [22.4, 105.0], [22.5, 105.0], [22.6, 105.0], [22.7, 105.0], [22.8, 105.0], [22.9, 105.0], [23.0, 106.0], [23.1, 106.0], [23.2, 106.0], [23.3, 106.0], [23.4, 106.0], [23.5, 106.0], [23.6, 106.0], [23.7, 106.0], [23.8, 106.0], [23.9, 106.0], [24.0, 106.0], [24.1, 106.0], [24.2, 106.0], [24.3, 106.0], [24.4, 106.0], [24.5, 106.0], [24.6, 106.0], [24.7, 107.0], [24.8, 107.0], [24.9, 107.0], [25.0, 107.0], [25.1, 107.0], [25.2, 107.0], [25.3, 107.0], [25.4, 107.0], [25.5, 107.0], [25.6, 108.0], [25.7, 108.0], [25.8, 108.0], [25.9, 108.0], [26.0, 108.0], [26.1, 108.0], [26.2, 108.0], [26.3, 108.0], [26.4, 108.0], [26.5, 108.0], [26.6, 108.0], [26.7, 108.0], [26.8, 109.0], [26.9, 109.0], [27.0, 109.0], [27.1, 109.0], [27.2, 109.0], [27.3, 109.0], [27.4, 109.0], [27.5, 109.0], [27.6, 109.0], [27.7, 110.0], [27.8, 110.0], [27.9, 110.0], [28.0, 110.0], [28.1, 110.0], [28.2, 110.0], [28.3, 110.0], [28.4, 110.0], [28.5, 110.0], [28.6, 110.0], [28.7, 110.0], [28.8, 111.0], [28.9, 111.0], [29.0, 111.0], [29.1, 111.0], [29.2, 111.0], [29.3, 111.0], [29.4, 111.0], [29.5, 111.0], [29.6, 111.0], [29.7, 111.0], [29.8, 111.0], [29.9, 111.0], [30.0, 112.0], [30.1, 112.0], [30.2, 112.0], [30.3, 112.0], [30.4, 112.0], [30.5, 112.0], [30.6, 112.0], [30.7, 112.0], [30.8, 112.0], [30.9, 112.0], [31.0, 112.0], [31.1, 112.0], [31.2, 112.0], [31.3, 112.0], [31.4, 113.0], [31.5, 113.0], [31.6, 113.0], [31.7, 113.0], [31.8, 113.0], [31.9, 113.0], [32.0, 113.0], [32.1, 113.0], [32.2, 114.0], [32.3, 114.0], [32.4, 114.0], [32.5, 114.0], [32.6, 114.0], [32.7, 114.0], [32.8, 114.0], [32.9, 114.0], [33.0, 114.0], [33.1, 114.0], [33.2, 114.0], [33.3, 114.0], [33.4, 114.0], [33.5, 115.0], [33.6, 115.0], [33.7, 115.0], [33.8, 115.0], [33.9, 115.0], [34.0, 115.0], [34.1, 115.0], [34.2, 115.0], [34.3, 115.0], [34.4, 115.0], [34.5, 115.0], [34.6, 115.0], [34.7, 115.0], [34.8, 115.0], [34.9, 115.0], [35.0, 116.0], [35.1, 116.0], [35.2, 116.0], [35.3, 117.0], [35.4, 117.0], [35.5, 117.0], [35.6, 117.0], [35.7, 117.0], [35.8, 117.0], [35.9, 117.0], [36.0, 117.0], [36.1, 117.0], [36.2, 117.0], [36.3, 118.0], [36.4, 118.0], [36.5, 118.0], [36.6, 118.0], [36.7, 118.0], [36.8, 118.0], [36.9, 119.0], [37.0, 119.0], [37.1, 119.0], [37.2, 119.0], [37.3, 119.0], [37.4, 119.0], [37.5, 119.0], [37.6, 119.0], [37.7, 119.0], [37.8, 119.0], [37.9, 120.0], [38.0, 120.0], [38.1, 120.0], [38.2, 120.0], [38.3, 120.0], [38.4, 120.0], [38.5, 120.0], [38.6, 120.0], [38.7, 121.0], [38.8, 121.0], [38.9, 121.0], [39.0, 121.0], [39.1, 121.0], [39.2, 121.0], [39.3, 121.0], [39.4, 121.0], [39.5, 121.0], [39.6, 121.0], [39.7, 121.0], [39.8, 122.0], [39.9, 122.0], [40.0, 122.0], [40.1, 122.0], [40.2, 122.0], [40.3, 122.0], [40.4, 123.0], [40.5, 123.0], [40.6, 123.0], [40.7, 123.0], [40.8, 123.0], [40.9, 123.0], [41.0, 123.0], [41.1, 124.0], [41.2, 124.0], [41.3, 124.0], [41.4, 124.0], [41.5, 124.0], [41.6, 124.0], [41.7, 124.0], [41.8, 124.0], [41.9, 124.0], [42.0, 124.0], [42.1, 124.0], [42.2, 125.0], [42.3, 125.0], [42.4, 125.0], [42.5, 125.0], [42.6, 125.0], [42.7, 125.0], [42.8, 125.0], [42.9, 125.0], [43.0, 125.0], [43.1, 125.0], [43.2, 125.0], [43.3, 126.0], [43.4, 126.0], [43.5, 126.0], [43.6, 126.0], [43.7, 126.0], [43.8, 126.0], [43.9, 127.0], [44.0, 127.0], [44.1, 127.0], [44.2, 127.0], [44.3, 128.0], [44.4, 128.0], [44.5, 128.0], [44.6, 128.0], [44.7, 128.0], [44.8, 128.0], [44.9, 128.0], [45.0, 128.0], [45.1, 129.0], [45.2, 129.0], [45.3, 129.0], [45.4, 129.0], [45.5, 129.0], [45.6, 129.0], [45.7, 129.0], [45.8, 129.0], [45.9, 130.0], [46.0, 130.0], [46.1, 130.0], [46.2, 130.0], [46.3, 130.0], [46.4, 130.0], [46.5, 130.0], [46.6, 130.0], [46.7, 130.0], [46.8, 130.0], [46.9, 131.0], [47.0, 131.0], [47.1, 131.0], [47.2, 131.0], [47.3, 131.0], [47.4, 131.0], [47.5, 132.0], [47.6, 132.0], [47.7, 132.0], [47.8, 132.0], [47.9, 133.0], [48.0, 133.0], [48.1, 133.0], [48.2, 133.0], [48.3, 133.0], [48.4, 134.0], [48.5, 134.0], [48.6, 134.0], [48.7, 134.0], [48.8, 134.0], [48.9, 134.0], [49.0, 135.0], [49.1, 135.0], [49.2, 135.0], [49.3, 135.0], [49.4, 135.0], [49.5, 135.0], [49.6, 135.0], [49.7, 136.0], [49.8, 136.0], [49.9, 136.0], [50.0, 137.0], [50.1, 137.0], [50.2, 137.0], [50.3, 137.0], [50.4, 138.0], [50.5, 138.0], [50.6, 138.0], [50.7, 138.0], [50.8, 138.0], [50.9, 139.0], [51.0, 139.0], [51.1, 139.0], [51.2, 139.0], [51.3, 140.0], [51.4, 140.0], [51.5, 140.0], [51.6, 140.0], [51.7, 141.0], [51.8, 141.0], [51.9, 141.0], [52.0, 141.0], [52.1, 141.0], [52.2, 141.0], [52.3, 142.0], [52.4, 142.0], [52.5, 142.0], [52.6, 143.0], [52.7, 143.0], [52.8, 144.0], [52.9, 144.0], [53.0, 144.0], [53.1, 145.0], [53.2, 145.0], [53.3, 145.0], [53.4, 146.0], [53.5, 146.0], [53.6, 146.0], [53.7, 146.0], [53.8, 147.0], [53.9, 147.0], [54.0, 148.0], [54.1, 148.0], [54.2, 148.0], [54.3, 148.0], [54.4, 148.0], [54.5, 148.0], [54.6, 148.0], [54.7, 148.0], [54.8, 148.0], [54.9, 149.0], [55.0, 149.0], [55.1, 149.0], [55.2, 149.0], [55.3, 149.0], [55.4, 149.0], [55.5, 149.0], [55.6, 149.0], [55.7, 150.0], [55.8, 150.0], [55.9, 150.0], [56.0, 151.0], [56.1, 151.0], [56.2, 151.0], [56.3, 151.0], [56.4, 151.0], [56.5, 151.0], [56.6, 152.0], [56.7, 152.0], [56.8, 152.0], [56.9, 152.0], [57.0, 153.0], [57.1, 153.0], [57.2, 153.0], [57.3, 153.0], [57.4, 154.0], [57.5, 154.0], [57.6, 154.0], [57.7, 154.0], [57.8, 154.0], [57.9, 155.0], [58.0, 155.0], [58.1, 155.0], [58.2, 155.0], [58.3, 155.0], [58.4, 156.0], [58.5, 156.0], [58.6, 156.0], [58.7, 156.0], [58.8, 156.0], [58.9, 156.0], [59.0, 156.0], [59.1, 157.0], [59.2, 157.0], [59.3, 157.0], [59.4, 158.0], [59.5, 158.0], [59.6, 159.0], [59.7, 159.0], [59.8, 159.0], [59.9, 159.0], [60.0, 161.0], [60.1, 161.0], [60.2, 161.0], [60.3, 161.0], [60.4, 162.0], [60.5, 162.0], [60.6, 162.0], [60.7, 163.0], [60.8, 163.0], [60.9, 165.0], [61.0, 165.0], [61.1, 165.0], [61.2, 165.0], [61.3, 166.0], [61.4, 166.0], [61.5, 167.0], [61.6, 167.0], [61.7, 167.0], [61.8, 167.0], [61.9, 168.0], [62.0, 169.0], [62.1, 170.0], [62.2, 170.0], [62.3, 170.0], [62.4, 173.0], [62.5, 174.0], [62.6, 174.0], [62.7, 176.0], [62.8, 176.0], [62.9, 176.0], [63.0, 177.0], [63.1, 178.0], [63.2, 179.0], [63.3, 181.0], [63.4, 181.0], [63.5, 181.0], [63.6, 181.0], [63.7, 181.0], [63.8, 182.0], [63.9, 182.0], [64.0, 183.0], [64.1, 184.0], [64.2, 185.0], [64.3, 185.0], [64.4, 185.0], [64.5, 186.0], [64.6, 186.0], [64.7, 188.0], [64.8, 190.0], [64.9, 190.0], [65.0, 193.0], [65.1, 194.0], [65.2, 199.0], [65.3, 200.0], [65.4, 201.0], [65.5, 201.0], [65.6, 202.0], [65.7, 202.0], [65.8, 202.0], [65.9, 202.0], [66.0, 203.0], [66.1, 203.0], [66.2, 203.0], [66.3, 204.0], [66.4, 204.0], [66.5, 205.0], [66.6, 206.0], [66.7, 206.0], [66.8, 206.0], [66.9, 206.0], [67.0, 207.0], [67.1, 208.0], [67.2, 208.0], [67.3, 209.0], [67.4, 210.0], [67.5, 210.0], [67.6, 211.0], [67.7, 211.0], [67.8, 211.0], [67.9, 211.0], [68.0, 212.0], [68.1, 214.0], [68.2, 214.0], [68.3, 214.0], [68.4, 214.0], [68.5, 215.0], [68.6, 216.0], [68.7, 216.0], [68.8, 217.0], [68.9, 218.0], [69.0, 218.0], [69.1, 219.0], [69.2, 220.0], [69.3, 221.0], [69.4, 223.0], [69.5, 223.0], [69.6, 223.0], [69.7, 223.0], [69.8, 224.0], [69.9, 224.0], [70.0, 225.0], [70.1, 226.0], [70.2, 226.0], [70.3, 227.0], [70.4, 228.0], [70.5, 229.0], [70.6, 229.0], [70.7, 229.0], [70.8, 230.0], [70.9, 231.0], [71.0, 232.0], [71.1, 232.0], [71.2, 232.0], [71.3, 232.0], [71.4, 233.0], [71.5, 235.0], [71.6, 237.0], [71.7, 238.0], [71.8, 238.0], [71.9, 238.0], [72.0, 238.0], [72.1, 240.0], [72.2, 242.0], [72.3, 243.0], [72.4, 244.0], [72.5, 244.0], [72.6, 245.0], [72.7, 246.0], [72.8, 247.0], [72.9, 248.0], [73.0, 248.0], [73.1, 250.0], [73.2, 250.0], [73.3, 250.0], [73.4, 250.0], [73.5, 251.0], [73.6, 252.0], [73.7, 252.0], [73.8, 254.0], [73.9, 254.0], [74.0, 255.0], [74.1, 255.0], [74.2, 257.0], [74.3, 257.0], [74.4, 257.0], [74.5, 257.0], [74.6, 258.0], [74.7, 259.0], [74.8, 260.0], [74.9, 260.0], [75.0, 261.0], [75.1, 263.0], [75.2, 264.0], [75.3, 264.0], [75.4, 266.0], [75.5, 267.0], [75.6, 267.0], [75.7, 267.0], [75.8, 268.0], [75.9, 268.0], [76.0, 271.0], [76.1, 272.0], [76.2, 272.0], [76.3, 273.0], [76.4, 273.0], [76.5, 274.0], [76.6, 274.0], [76.7, 275.0], [76.8, 275.0], [76.9, 276.0], [77.0, 277.0], [77.1, 279.0], [77.2, 280.0], [77.3, 281.0], [77.4, 281.0], [77.5, 281.0], [77.6, 283.0], [77.7, 283.0], [77.8, 283.0], [77.9, 284.0], [78.0, 284.0], [78.1, 285.0], [78.2, 287.0], [78.3, 288.0], [78.4, 292.0], [78.5, 297.0], [78.6, 300.0], [78.7, 314.0], [78.8, 316.0], [78.9, 318.0], [79.0, 318.0], [79.1, 319.0], [79.2, 320.0], [79.3, 324.0], [79.4, 326.0], [79.5, 327.0], [79.6, 333.0], [79.7, 333.0], [79.8, 335.0], [79.9, 339.0], [80.0, 344.0], [80.1, 344.0], [80.2, 348.0], [80.3, 349.0], [80.4, 354.0], [80.5, 356.0], [80.6, 356.0], [80.7, 360.0], [80.8, 362.0], [80.9, 362.0], [81.0, 365.0], [81.1, 367.0], [81.2, 379.0], [81.3, 383.0], [81.4, 385.0], [81.5, 390.0], [81.6, 391.0], [81.7, 392.0], [81.8, 396.0], [81.9, 397.0], [82.0, 398.0], [82.1, 399.0], [82.2, 403.0], [82.3, 405.0], [82.4, 409.0], [82.5, 413.0], [82.6, 414.0], [82.7, 419.0], [82.8, 426.0], [82.9, 430.0], [83.0, 430.0], [83.1, 436.0], [83.2, 438.0], [83.3, 443.0], [83.4, 443.0], [83.5, 449.0], [83.6, 452.0], [83.7, 471.0], [83.8, 485.0], [83.9, 488.0], [84.0, 489.0], [84.1, 490.0], [84.2, 490.0], [84.3, 503.0], [84.4, 506.0], [84.5, 509.0], [84.6, 515.0], [84.7, 517.0], [84.8, 519.0], [84.9, 520.0], [85.0, 521.0], [85.1, 524.0], [85.2, 526.0], [85.3, 529.0], [85.4, 534.0], [85.5, 537.0], [85.6, 538.0], [85.7, 552.0], [85.8, 553.0], [85.9, 556.0], [86.0, 560.0], [86.1, 571.0], [86.2, 576.0], [86.3, 604.0], [86.4, 607.0], [86.5, 608.0], [86.6, 608.0], [86.7, 612.0], [86.8, 614.0], [86.9, 634.0], [87.0, 634.0], [87.1, 641.0], [87.2, 653.0], [87.3, 684.0], [87.4, 688.0], [87.5, 700.0], [87.6, 708.0], [87.7, 717.0], [87.8, 761.0], [87.9, 763.0], [88.0, 774.0], [88.1, 776.0], [88.2, 788.0], [88.3, 794.0], [88.4, 870.0], [88.5, 878.0], [88.6, 960.0], [88.7, 1008.0], [88.8, 1171.0], [88.9, 1193.0], [89.0, 1249.0], [89.1, 1304.0], [89.2, 1689.0], [89.3, 14398.0], [89.4, 14608.0], [89.5, 14824.0], [89.6, 15058.0], [89.7, 15968.0], [89.8, 15998.0], [89.9, 16266.0], [90.0, 17171.0], [90.1, 17369.0], [90.2, 17814.0], [90.3, 18086.0], [90.4, 18691.0], [90.5, 19461.0], [90.6, 19857.0], [90.7, 20248.0], [90.8, 20278.0], [90.9, 20570.0], [91.0, 20788.0], [91.1, 21275.0], [91.2, 21769.0], [91.3, 22212.0], [91.4, 23988.0], [91.5, 25485.0], [91.6, 25944.0], [91.7, 26090.0], [91.8, 26906.0], [91.9, 27631.0], [92.0, 28505.0], [92.1, 28721.0], [92.2, 30750.0], [92.3, 31191.0], [92.4, 31870.0], [92.5, 31877.0], [92.6, 31878.0], [92.7, 33290.0], [92.8, 33948.0], [92.9, 34046.0], [93.0, 35851.0], [93.1, 36121.0], [93.2, 36895.0], [93.3, 37311.0], [93.4, 37337.0], [93.5, 39350.0], [93.6, 39371.0], [93.7, 39418.0], [93.8, 40624.0], [93.9, 40769.0], [94.0, 41288.0], [94.1, 41422.0], [94.2, 41957.0], [94.3, 42416.0], [94.4, 42771.0], [94.5, 43716.0], [94.6, 44094.0], [94.7, 44772.0], [94.8, 45013.0], [94.9, 46829.0], [95.0, 47069.0], [95.1, 48009.0], [95.2, 48277.0], [95.3, 48551.0], [95.4, 49640.0], [95.5, 51298.0], [95.6, 51538.0], [95.7, 51564.0], [95.8, 52920.0], [95.9, 52973.0], [96.0, 54312.0], [96.1, 54373.0], [96.2, 54723.0], [96.3, 55242.0], [96.4, 55344.0], [96.5, 55494.0], [96.6, 55812.0], [96.7, 55990.0], [96.8, 56078.0], [96.9, 56392.0], [97.0, 56618.0], [97.1, 56627.0], [97.2, 56630.0], [97.3, 56954.0], [97.4, 57267.0], [97.5, 57318.0], [97.6, 57971.0], [97.7, 58029.0], [97.8, 58304.0], [97.9, 58318.0], [98.0, 58395.0], [98.1, 58519.0], [98.2, 58722.0], [98.3, 58803.0], [98.4, 59040.0], [98.5, 59329.0], [98.6, 59491.0], [98.7, 59675.0], [98.8, 59909.0], [98.9, 60153.0], [99.0, 60246.0], [99.1, 60305.0], [99.2, 60855.0], [99.3, 60951.0], [99.4, 60975.0], [99.5, 61040.0], [99.6, 61042.0], [99.7, 61191.0], [99.8, 61357.0], [99.9, 61478.0], [100.0, 62070.0]], "isOverall": false, "label": "Get All Posts", "isController": false}, {"data": [[0.0, 86.0], [0.1, 87.0], [0.2, 88.0], [0.3, 88.0], [0.4, 88.0], [0.5, 88.0], [0.6, 88.0], [0.7, 88.0], [0.8, 88.0], [0.9, 88.0], [1.0, 89.0], [1.1, 89.0], [1.2, 89.0], [1.3, 89.0], [1.4, 90.0], [1.5, 90.0], [1.6, 90.0], [1.7, 90.0], [1.8, 90.0], [1.9, 90.0], [2.0, 90.0], [2.1, 91.0], [2.2, 91.0], [2.3, 91.0], [2.4, 91.0], [2.5, 91.0], [2.6, 91.0], [2.7, 91.0], [2.8, 91.0], [2.9, 92.0], [3.0, 92.0], [3.1, 92.0], [3.2, 92.0], [3.3, 92.0], [3.4, 92.0], [3.5, 92.0], [3.6, 92.0], [3.7, 92.0], [3.8, 92.0], [3.9, 92.0], [4.0, 92.0], [4.1, 93.0], [4.2, 93.0], [4.3, 93.0], [4.4, 93.0], [4.5, 93.0], [4.6, 93.0], [4.7, 93.0], [4.8, 93.0], [4.9, 93.0], [5.0, 93.0], [5.1, 93.0], [5.2, 93.0], [5.3, 93.0], [5.4, 93.0], [5.5, 93.0], [5.6, 94.0], [5.7, 94.0], [5.8, 94.0], [5.9, 94.0], [6.0, 94.0], [6.1, 94.0], [6.2, 94.0], [6.3, 94.0], [6.4, 94.0], [6.5, 94.0], [6.6, 94.0], [6.7, 94.0], [6.8, 94.0], [6.9, 94.0], [7.0, 94.0], [7.1, 94.0], [7.2, 94.0], [7.3, 94.0], [7.4, 94.0], [7.5, 94.0], [7.6, 95.0], [7.7, 95.0], [7.8, 95.0], [7.9, 95.0], [8.0, 95.0], [8.1, 95.0], [8.2, 95.0], [8.3, 95.0], [8.4, 95.0], [8.5, 95.0], [8.6, 95.0], [8.7, 95.0], [8.8, 95.0], [8.9, 95.0], [9.0, 95.0], [9.1, 95.0], [9.2, 95.0], [9.3, 95.0], [9.4, 96.0], [9.5, 96.0], [9.6, 96.0], [9.7, 96.0], [9.8, 96.0], [9.9, 96.0], [10.0, 96.0], [10.1, 96.0], [10.2, 96.0], [10.3, 96.0], [10.4, 96.0], [10.5, 96.0], [10.6, 96.0], [10.7, 96.0], [10.8, 96.0], [10.9, 96.0], [11.0, 96.0], [11.1, 96.0], [11.2, 96.0], [11.3, 96.0], [11.4, 96.0], [11.5, 96.0], [11.6, 97.0], [11.7, 97.0], [11.8, 97.0], [11.9, 97.0], [12.0, 97.0], [12.1, 97.0], [12.2, 97.0], [12.3, 97.0], [12.4, 97.0], [12.5, 97.0], [12.6, 97.0], [12.7, 97.0], [12.8, 97.0], [12.9, 97.0], [13.0, 97.0], [13.1, 97.0], [13.2, 97.0], [13.3, 98.0], [13.4, 98.0], [13.5, 98.0], [13.6, 98.0], [13.7, 98.0], [13.8, 98.0], [13.9, 98.0], [14.0, 98.0], [14.1, 98.0], [14.2, 98.0], [14.3, 98.0], [14.4, 98.0], [14.5, 98.0], [14.6, 98.0], [14.7, 98.0], [14.8, 98.0], [14.9, 99.0], [15.0, 99.0], [15.1, 99.0], [15.2, 99.0], [15.3, 99.0], [15.4, 99.0], [15.5, 99.0], [15.6, 99.0], [15.7, 99.0], [15.8, 99.0], [15.9, 99.0], [16.0, 99.0], [16.1, 99.0], [16.2, 99.0], [16.3, 99.0], [16.4, 99.0], [16.5, 99.0], [16.6, 99.0], [16.7, 99.0], [16.8, 99.0], [16.9, 100.0], [17.0, 100.0], [17.1, 100.0], [17.2, 100.0], [17.3, 100.0], [17.4, 100.0], [17.5, 100.0], [17.6, 100.0], [17.7, 100.0], [17.8, 100.0], [17.9, 100.0], [18.0, 100.0], [18.1, 100.0], [18.2, 100.0], [18.3, 100.0], [18.4, 100.0], [18.5, 100.0], [18.6, 100.0], [18.7, 100.0], [18.8, 100.0], [18.9, 100.0], [19.0, 101.0], [19.1, 101.0], [19.2, 101.0], [19.3, 101.0], [19.4, 101.0], [19.5, 101.0], [19.6, 101.0], [19.7, 101.0], [19.8, 101.0], [19.9, 101.0], [20.0, 101.0], [20.1, 101.0], [20.2, 102.0], [20.3, 102.0], [20.4, 102.0], [20.5, 102.0], [20.6, 102.0], [20.7, 102.0], [20.8, 102.0], [20.9, 102.0], [21.0, 102.0], [21.1, 102.0], [21.2, 102.0], [21.3, 102.0], [21.4, 102.0], [21.5, 102.0], [21.6, 102.0], [21.7, 102.0], [21.8, 102.0], [21.9, 103.0], [22.0, 103.0], [22.1, 103.0], [22.2, 103.0], [22.3, 103.0], [22.4, 103.0], [22.5, 103.0], [22.6, 103.0], [22.7, 103.0], [22.8, 103.0], [22.9, 103.0], [23.0, 104.0], [23.1, 104.0], [23.2, 104.0], [23.3, 104.0], [23.4, 104.0], [23.5, 104.0], [23.6, 104.0], [23.7, 104.0], [23.8, 105.0], [23.9, 105.0], [24.0, 105.0], [24.1, 105.0], [24.2, 105.0], [24.3, 105.0], [24.4, 105.0], [24.5, 105.0], [24.6, 105.0], [24.7, 106.0], [24.8, 106.0], [24.9, 106.0], [25.0, 106.0], [25.1, 106.0], [25.2, 106.0], [25.3, 106.0], [25.4, 106.0], [25.5, 106.0], [25.6, 106.0], [25.7, 106.0], [25.8, 106.0], [25.9, 106.0], [26.0, 106.0], [26.1, 106.0], [26.2, 106.0], [26.3, 106.0], [26.4, 106.0], [26.5, 107.0], [26.6, 107.0], [26.7, 107.0], [26.8, 107.0], [26.9, 107.0], [27.0, 107.0], [27.1, 107.0], [27.2, 107.0], [27.3, 107.0], [27.4, 107.0], [27.5, 107.0], [27.6, 107.0], [27.7, 107.0], [27.8, 107.0], [27.9, 107.0], [28.0, 107.0], [28.1, 107.0], [28.2, 107.0], [28.3, 108.0], [28.4, 108.0], [28.5, 108.0], [28.6, 108.0], [28.7, 108.0], [28.8, 108.0], [28.9, 108.0], [29.0, 108.0], [29.1, 108.0], [29.2, 108.0], [29.3, 108.0], [29.4, 108.0], [29.5, 108.0], [29.6, 108.0], [29.7, 109.0], [29.8, 109.0], [29.9, 109.0], [30.0, 109.0], [30.1, 109.0], [30.2, 109.0], [30.3, 109.0], [30.4, 109.0], [30.5, 109.0], [30.6, 109.0], [30.7, 109.0], [30.8, 109.0], [30.9, 109.0], [31.0, 109.0], [31.1, 110.0], [31.2, 110.0], [31.3, 110.0], [31.4, 110.0], [31.5, 110.0], [31.6, 110.0], [31.7, 110.0], [31.8, 110.0], [31.9, 110.0], [32.0, 110.0], [32.1, 110.0], [32.2, 110.0], [32.3, 110.0], [32.4, 111.0], [32.5, 111.0], [32.6, 111.0], [32.7, 111.0], [32.8, 111.0], [32.9, 111.0], [33.0, 111.0], [33.1, 111.0], [33.2, 111.0], [33.3, 111.0], [33.4, 112.0], [33.5, 112.0], [33.6, 112.0], [33.7, 112.0], [33.8, 112.0], [33.9, 112.0], [34.0, 112.0], [34.1, 112.0], [34.2, 112.0], [34.3, 112.0], [34.4, 113.0], [34.5, 113.0], [34.6, 113.0], [34.7, 113.0], [34.8, 113.0], [34.9, 113.0], [35.0, 113.0], [35.1, 113.0], [35.2, 113.0], [35.3, 113.0], [35.4, 113.0], [35.5, 113.0], [35.6, 113.0], [35.7, 113.0], [35.8, 113.0], [35.9, 113.0], [36.0, 113.0], [36.1, 114.0], [36.2, 114.0], [36.3, 114.0], [36.4, 114.0], [36.5, 114.0], [36.6, 114.0], [36.7, 114.0], [36.8, 114.0], [36.9, 114.0], [37.0, 114.0], [37.1, 114.0], [37.2, 114.0], [37.3, 114.0], [37.4, 114.0], [37.5, 114.0], [37.6, 114.0], [37.7, 114.0], [37.8, 115.0], [37.9, 115.0], [38.0, 115.0], [38.1, 115.0], [38.2, 115.0], [38.3, 115.0], [38.4, 115.0], [38.5, 115.0], [38.6, 115.0], [38.7, 116.0], [38.8, 116.0], [38.9, 116.0], [39.0, 116.0], [39.1, 116.0], [39.2, 116.0], [39.3, 116.0], [39.4, 116.0], [39.5, 116.0], [39.6, 116.0], [39.7, 116.0], [39.8, 116.0], [39.9, 117.0], [40.0, 117.0], [40.1, 117.0], [40.2, 117.0], [40.3, 117.0], [40.4, 117.0], [40.5, 117.0], [40.6, 118.0], [40.7, 118.0], [40.8, 118.0], [40.9, 118.0], [41.0, 118.0], [41.1, 118.0], [41.2, 118.0], [41.3, 118.0], [41.4, 118.0], [41.5, 118.0], [41.6, 118.0], [41.7, 118.0], [41.8, 118.0], [41.9, 119.0], [42.0, 119.0], [42.1, 119.0], [42.2, 119.0], [42.3, 119.0], [42.4, 119.0], [42.5, 119.0], [42.6, 119.0], [42.7, 119.0], [42.8, 119.0], [42.9, 119.0], [43.0, 120.0], [43.1, 120.0], [43.2, 120.0], [43.3, 120.0], [43.4, 120.0], [43.5, 120.0], [43.6, 120.0], [43.7, 120.0], [43.8, 120.0], [43.9, 121.0], [44.0, 121.0], [44.1, 121.0], [44.2, 121.0], [44.3, 121.0], [44.4, 121.0], [44.5, 121.0], [44.6, 121.0], [44.7, 121.0], [44.8, 121.0], [44.9, 122.0], [45.0, 122.0], [45.1, 122.0], [45.2, 122.0], [45.3, 122.0], [45.4, 122.0], [45.5, 122.0], [45.6, 123.0], [45.7, 123.0], [45.8, 123.0], [45.9, 123.0], [46.0, 123.0], [46.1, 123.0], [46.2, 123.0], [46.3, 123.0], [46.4, 123.0], [46.5, 123.0], [46.6, 123.0], [46.7, 123.0], [46.8, 124.0], [46.9, 124.0], [47.0, 124.0], [47.1, 124.0], [47.2, 124.0], [47.3, 124.0], [47.4, 124.0], [47.5, 125.0], [47.6, 125.0], [47.7, 125.0], [47.8, 125.0], [47.9, 125.0], [48.0, 125.0], [48.1, 125.0], [48.2, 125.0], [48.3, 125.0], [48.4, 125.0], [48.5, 125.0], [48.6, 125.0], [48.7, 125.0], [48.8, 125.0], [48.9, 125.0], [49.0, 125.0], [49.1, 126.0], [49.2, 126.0], [49.3, 126.0], [49.4, 126.0], [49.5, 126.0], [49.6, 126.0], [49.7, 126.0], [49.8, 126.0], [49.9, 127.0], [50.0, 127.0], [50.1, 127.0], [50.2, 127.0], [50.3, 127.0], [50.4, 127.0], [50.5, 127.0], [50.6, 127.0], [50.7, 127.0], [50.8, 128.0], [50.9, 128.0], [51.0, 128.0], [51.1, 128.0], [51.2, 128.0], [51.3, 128.0], [51.4, 128.0], [51.5, 128.0], [51.6, 129.0], [51.7, 129.0], [51.8, 130.0], [51.9, 130.0], [52.0, 130.0], [52.1, 130.0], [52.2, 130.0], [52.3, 130.0], [52.4, 130.0], [52.5, 130.0], [52.6, 130.0], [52.7, 131.0], [52.8, 131.0], [52.9, 131.0], [53.0, 131.0], [53.1, 131.0], [53.2, 131.0], [53.3, 131.0], [53.4, 131.0], [53.5, 132.0], [53.6, 132.0], [53.7, 132.0], [53.8, 132.0], [53.9, 133.0], [54.0, 133.0], [54.1, 133.0], [54.2, 133.0], [54.3, 133.0], [54.4, 134.0], [54.5, 134.0], [54.6, 134.0], [54.7, 134.0], [54.8, 134.0], [54.9, 134.0], [55.0, 134.0], [55.1, 135.0], [55.2, 135.0], [55.3, 135.0], [55.4, 135.0], [55.5, 135.0], [55.6, 135.0], [55.7, 135.0], [55.8, 135.0], [55.9, 135.0], [56.0, 136.0], [56.1, 136.0], [56.2, 136.0], [56.3, 136.0], [56.4, 136.0], [56.5, 136.0], [56.6, 136.0], [56.7, 136.0], [56.8, 136.0], [56.9, 136.0], [57.0, 137.0], [57.1, 137.0], [57.2, 137.0], [57.3, 137.0], [57.4, 138.0], [57.5, 138.0], [57.6, 138.0], [57.7, 138.0], [57.8, 138.0], [57.9, 138.0], [58.0, 138.0], [58.1, 138.0], [58.2, 138.0], [58.3, 139.0], [58.4, 139.0], [58.5, 139.0], [58.6, 140.0], [58.7, 140.0], [58.8, 140.0], [58.9, 140.0], [59.0, 140.0], [59.1, 140.0], [59.2, 141.0], [59.3, 141.0], [59.4, 141.0], [59.5, 141.0], [59.6, 142.0], [59.7, 142.0], [59.8, 142.0], [59.9, 142.0], [60.0, 143.0], [60.1, 143.0], [60.2, 143.0], [60.3, 143.0], [60.4, 143.0], [60.5, 144.0], [60.6, 144.0], [60.7, 144.0], [60.8, 144.0], [60.9, 144.0], [61.0, 144.0], [61.1, 145.0], [61.2, 145.0], [61.3, 145.0], [61.4, 146.0], [61.5, 146.0], [61.6, 146.0], [61.7, 146.0], [61.8, 146.0], [61.9, 146.0], [62.0, 146.0], [62.1, 146.0], [62.2, 147.0], [62.3, 147.0], [62.4, 147.0], [62.5, 147.0], [62.6, 147.0], [62.7, 148.0], [62.8, 148.0], [62.9, 148.0], [63.0, 148.0], [63.1, 148.0], [63.2, 149.0], [63.3, 149.0], [63.4, 149.0], [63.5, 149.0], [63.6, 150.0], [63.7, 150.0], [63.8, 150.0], [63.9, 150.0], [64.0, 151.0], [64.1, 151.0], [64.2, 151.0], [64.3, 151.0], [64.4, 152.0], [64.5, 152.0], [64.6, 152.0], [64.7, 153.0], [64.8, 153.0], [64.9, 153.0], [65.0, 153.0], [65.1, 153.0], [65.2, 153.0], [65.3, 154.0], [65.4, 154.0], [65.5, 154.0], [65.6, 154.0], [65.7, 154.0], [65.8, 154.0], [65.9, 154.0], [66.0, 154.0], [66.1, 155.0], [66.2, 155.0], [66.3, 155.0], [66.4, 155.0], [66.5, 155.0], [66.6, 155.0], [66.7, 155.0], [66.8, 155.0], [66.9, 156.0], [67.0, 156.0], [67.1, 156.0], [67.2, 156.0], [67.3, 156.0], [67.4, 156.0], [67.5, 157.0], [67.6, 158.0], [67.7, 158.0], [67.8, 158.0], [67.9, 158.0], [68.0, 158.0], [68.1, 158.0], [68.2, 159.0], [68.3, 159.0], [68.4, 159.0], [68.5, 159.0], [68.6, 159.0], [68.7, 159.0], [68.8, 159.0], [68.9, 160.0], [69.0, 161.0], [69.1, 161.0], [69.2, 161.0], [69.3, 162.0], [69.4, 162.0], [69.5, 162.0], [69.6, 162.0], [69.7, 162.0], [69.8, 163.0], [69.9, 163.0], [70.0, 163.0], [70.1, 163.0], [70.2, 163.0], [70.3, 163.0], [70.4, 163.0], [70.5, 164.0], [70.6, 164.0], [70.7, 165.0], [70.8, 165.0], [70.9, 165.0], [71.0, 165.0], [71.1, 166.0], [71.2, 167.0], [71.3, 167.0], [71.4, 167.0], [71.5, 168.0], [71.6, 168.0], [71.7, 168.0], [71.8, 168.0], [71.9, 169.0], [72.0, 171.0], [72.1, 171.0], [72.2, 172.0], [72.3, 172.0], [72.4, 173.0], [72.5, 174.0], [72.6, 174.0], [72.7, 175.0], [72.8, 176.0], [72.9, 176.0], [73.0, 177.0], [73.1, 178.0], [73.2, 178.0], [73.3, 179.0], [73.4, 179.0], [73.5, 181.0], [73.6, 182.0], [73.7, 182.0], [73.8, 183.0], [73.9, 186.0], [74.0, 186.0], [74.1, 187.0], [74.2, 187.0], [74.3, 187.0], [74.4, 189.0], [74.5, 193.0], [74.6, 194.0], [74.7, 194.0], [74.8, 195.0], [74.9, 195.0], [75.0, 196.0], [75.1, 198.0], [75.2, 199.0], [75.3, 199.0], [75.4, 200.0], [75.5, 202.0], [75.6, 202.0], [75.7, 204.0], [75.8, 205.0], [75.9, 206.0], [76.0, 208.0], [76.1, 208.0], [76.2, 209.0], [76.3, 210.0], [76.4, 210.0], [76.5, 212.0], [76.6, 213.0], [76.7, 214.0], [76.8, 215.0], [76.9, 216.0], [77.0, 216.0], [77.1, 216.0], [77.2, 216.0], [77.3, 217.0], [77.4, 217.0], [77.5, 217.0], [77.6, 218.0], [77.7, 218.0], [77.8, 218.0], [77.9, 219.0], [78.0, 220.0], [78.1, 220.0], [78.2, 220.0], [78.3, 221.0], [78.4, 221.0], [78.5, 222.0], [78.6, 222.0], [78.7, 223.0], [78.8, 224.0], [78.9, 224.0], [79.0, 225.0], [79.1, 225.0], [79.2, 226.0], [79.3, 226.0], [79.4, 227.0], [79.5, 227.0], [79.6, 228.0], [79.7, 228.0], [79.8, 229.0], [79.9, 229.0], [80.0, 231.0], [80.1, 232.0], [80.2, 233.0], [80.3, 235.0], [80.4, 236.0], [80.5, 236.0], [80.6, 237.0], [80.7, 237.0], [80.8, 237.0], [80.9, 237.0], [81.0, 238.0], [81.1, 239.0], [81.2, 239.0], [81.3, 240.0], [81.4, 242.0], [81.5, 242.0], [81.6, 242.0], [81.7, 243.0], [81.8, 244.0], [81.9, 244.0], [82.0, 244.0], [82.1, 245.0], [82.2, 246.0], [82.3, 246.0], [82.4, 246.0], [82.5, 246.0], [82.6, 248.0], [82.7, 248.0], [82.8, 249.0], [82.9, 249.0], [83.0, 250.0], [83.1, 251.0], [83.2, 251.0], [83.3, 254.0], [83.4, 254.0], [83.5, 254.0], [83.6, 255.0], [83.7, 255.0], [83.8, 257.0], [83.9, 257.0], [84.0, 260.0], [84.1, 260.0], [84.2, 261.0], [84.3, 261.0], [84.4, 262.0], [84.5, 263.0], [84.6, 263.0], [84.7, 263.0], [84.8, 263.0], [84.9, 264.0], [85.0, 265.0], [85.1, 265.0], [85.2, 267.0], [85.3, 267.0], [85.4, 268.0], [85.5, 268.0], [85.6, 269.0], [85.7, 270.0], [85.8, 270.0], [85.9, 271.0], [86.0, 272.0], [86.1, 272.0], [86.2, 273.0], [86.3, 276.0], [86.4, 277.0], [86.5, 277.0], [86.6, 279.0], [86.7, 280.0], [86.8, 281.0], [86.9, 282.0], [87.0, 282.0], [87.1, 290.0], [87.2, 291.0], [87.3, 291.0], [87.4, 292.0], [87.5, 294.0], [87.6, 297.0], [87.7, 297.0], [87.8, 298.0], [87.9, 299.0], [88.0, 300.0], [88.1, 302.0], [88.2, 304.0], [88.3, 306.0], [88.4, 307.0], [88.5, 312.0], [88.6, 313.0], [88.7, 314.0], [88.8, 320.0], [88.9, 322.0], [89.0, 325.0], [89.1, 325.0], [89.2, 326.0], [89.3, 331.0], [89.4, 333.0], [89.5, 334.0], [89.6, 335.0], [89.7, 336.0], [89.8, 336.0], [89.9, 341.0], [90.0, 346.0], [90.1, 347.0], [90.2, 348.0], [90.3, 351.0], [90.4, 351.0], [90.5, 353.0], [90.6, 360.0], [90.7, 360.0], [90.8, 361.0], [90.9, 371.0], [91.0, 380.0], [91.1, 380.0], [91.2, 394.0], [91.3, 417.0], [91.4, 443.0], [91.5, 451.0], [91.6, 465.0], [91.7, 467.0], [91.8, 468.0], [91.9, 469.0], [92.0, 501.0], [92.1, 502.0], [92.2, 503.0], [92.3, 507.0], [92.4, 511.0], [92.5, 527.0], [92.6, 530.0], [92.7, 547.0], [92.8, 548.0], [92.9, 567.0], [93.0, 574.0], [93.1, 583.0], [93.2, 584.0], [93.3, 589.0], [93.4, 590.0], [93.5, 596.0], [93.6, 603.0], [93.7, 641.0], [93.8, 656.0], [93.9, 688.0], [94.0, 692.0], [94.1, 733.0], [94.2, 742.0], [94.3, 752.0], [94.4, 753.0], [94.5, 771.0], [94.6, 816.0], [94.7, 817.0], [94.8, 896.0], [94.9, 988.0], [95.0, 15004.0], [95.1, 15024.0], [95.2, 15050.0], [95.3, 17011.0], [95.4, 18081.0], [95.5, 18937.0], [95.6, 18963.0], [95.7, 19649.0], [95.8, 20790.0], [95.9, 22578.0], [96.0, 25734.0], [96.1, 27628.0], [96.2, 27637.0], [96.3, 28624.0], [96.4, 29205.0], [96.5, 30651.0], [96.6, 31361.0], [96.7, 31909.0], [96.8, 32293.0], [96.9, 34590.0], [97.0, 35325.0], [97.1, 35929.0], [97.2, 36109.0], [97.3, 36608.0], [97.4, 36636.0], [97.5, 37548.0], [97.6, 37645.0], [97.7, 38544.0], [97.8, 38570.0], [97.9, 38572.0], [98.0, 39105.0], [98.1, 39729.0], [98.2, 40751.0], [98.3, 42485.0], [98.4, 42666.0], [98.5, 43188.0], [98.6, 43917.0], [98.7, 45287.0], [98.8, 46651.0], [98.9, 46660.0], [99.0, 48906.0], [99.1, 48960.0], [99.2, 49439.0], [99.3, 51551.0], [99.4, 52605.0], [99.5, 53619.0], [99.6, 55151.0], [99.7, 60427.0], [99.8, 60757.0], [99.9, 61282.0]], "isOverall": false, "label": "Get All Comments", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 599.0, "series": [{"data": [[0.0, 148.0], [600.0, 5.0], [700.0, 9.0], [800.0, 2.0], [900.0, 4.0], [16200.0, 1.0], [16000.0, 2.0], [16900.0, 1.0], [16700.0, 1.0], [18500.0, 1.0], [21200.0, 1.0], [20800.0, 1.0], [23300.0, 1.0], [24500.0, 1.0], [100.0, 585.0], [26600.0, 1.0], [25900.0, 1.0], [27300.0, 2.0], [26900.0, 1.0], [29100.0, 1.0], [30500.0, 3.0], [29900.0, 1.0], [32500.0, 3.0], [31800.0, 2.0], [34800.0, 3.0], [33900.0, 2.0], [33100.0, 1.0], [36100.0, 1.0], [36600.0, 1.0], [35200.0, 1.0], [35900.0, 1.0], [38600.0, 1.0], [40500.0, 1.0], [41200.0, 1.0], [41800.0, 2.0], [41900.0, 1.0], [41000.0, 1.0], [44000.0, 1.0], [43600.0, 2.0], [45000.0, 1.0], [46600.0, 1.0], [47700.0, 1.0], [49100.0, 1.0], [48400.0, 1.0], [50100.0, 1.0], [200.0, 106.0], [52400.0, 2.0], [51200.0, 1.0], [53400.0, 1.0], [53600.0, 2.0], [60300.0, 1.0], [60100.0, 1.0], [59600.0, 1.0], [61600.0, 1.0], [300.0, 32.0], [400.0, 16.0], [500.0, 8.0]], "isOverall": false, "label": "Get All To-dos", "isController": false}, {"data": [[0.0, 12.0], [65900.0, 2.0], [66700.0, 2.0], [67500.0, 3.0], [68300.0, 2.0], [69100.0, 4.0], [100.0, 305.0], [33300.0, 3.0], [37300.0, 1.0], [38100.0, 1.0], [38500.0, 1.0], [40100.0, 1.0], [40900.0, 1.0], [39300.0, 2.0], [42500.0, 1.0], [41300.0, 1.0], [43300.0, 1.0], [43700.0, 2.0], [44100.0, 1.0], [45700.0, 1.0], [46500.0, 1.0], [46900.0, 1.0], [45300.0, 2.0], [47300.0, 1.0], [48900.0, 1.0], [48500.0, 1.0], [50900.0, 2.0], [200.0, 290.0], [52100.0, 2.0], [52500.0, 1.0], [52900.0, 1.0], [51700.0, 1.0], [51300.0, 2.0], [53300.0, 1.0], [53700.0, 2.0], [54500.0, 2.0], [55300.0, 1.0], [57300.0, 1.0], [58100.0, 2.0], [59300.0, 2.0], [59700.0, 1.0], [60100.0, 2.0], [60500.0, 3.0], [60900.0, 2.0], [61300.0, 2.0], [61700.0, 4.0], [62100.0, 3.0], [62500.0, 2.0], [62900.0, 3.0], [63300.0, 3.0], [63700.0, 3.0], [64100.0, 3.0], [64500.0, 2.0], [64900.0, 4.0], [65300.0, 4.0], [65800.0, 2.0], [66600.0, 1.0], [68200.0, 4.0], [69000.0, 1.0], [300.0, 119.0], [400.0, 44.0], [500.0, 23.0], [600.0, 15.0], [700.0, 11.0], [800.0, 3.0], [900.0, 3.0], [1000.0, 1.0], [1100.0, 3.0], [1200.0, 1.0], [2400.0, 1.0], [65700.0, 2.0], [66500.0, 3.0], [67300.0, 2.0], [68100.0, 1.0], [68900.0, 2.0], [4900.0, 2.0], [5000.0, 1.0], [5100.0, 2.0], [5200.0, 5.0], [5300.0, 1.0], [5400.0, 7.0], [5500.0, 2.0], [5600.0, 4.0], [5700.0, 3.0], [5800.0, 1.0], [5900.0, 3.0], [6000.0, 4.0], [6100.0, 2.0], [6300.0, 4.0], [6200.0, 5.0], [6400.0, 2.0], [6500.0, 5.0], [6600.0, 2.0], [6700.0, 5.0], [6900.0, 1.0], [6800.0, 3.0], [7000.0, 6.0], [7100.0, 2.0], [7200.0, 4.0], [7300.0, 3.0], [7400.0, 1.0], [7800.0, 1.0], [7900.0, 2.0], [8000.0, 2.0], [9100.0, 1.0], [9600.0, 1.0], [9300.0, 1.0], [10200.0, 1.0], [10300.0, 2.0], [10700.0, 1.0], [11200.0, 1.0], [12100.0, 1.0], [12200.0, 1.0], [12400.0, 1.0], [12500.0, 1.0], [12800.0, 1.0], [12900.0, 2.0], [13200.0, 1.0], [15200.0, 1.0], [16200.0, 1.0], [16300.0, 1.0], [16000.0, 1.0], [16600.0, 1.0], [17200.0, 1.0], [18400.0, 2.0], [18200.0, 1.0], [20000.0, 1.0], [20400.0, 1.0], [19600.0, 1.0], [20200.0, 1.0], [21400.0, 1.0], [20800.0, 1.0], [21600.0, 4.0], [22400.0, 1.0], [22200.0, 1.0], [22600.0, 1.0], [23400.0, 3.0], [24600.0, 1.0], [25400.0, 1.0], [25600.0, 1.0], [26000.0, 1.0], [26200.0, 1.0], [26800.0, 2.0], [27200.0, 1.0], [27400.0, 1.0], [28800.0, 2.0], [29400.0, 1.0], [29800.0, 2.0], [30000.0, 1.0], [30200.0, 1.0], [31000.0, 1.0], [31200.0, 1.0], [32400.0, 2.0], [33200.0, 2.0], [33600.0, 1.0], [34000.0, 3.0], [34800.0, 1.0], [35200.0, 1.0], [36000.0, 1.0], [35600.0, 2.0], [38000.0, 1.0], [38400.0, 1.0], [38800.0, 1.0], [39600.0, 1.0], [40800.0, 1.0], [41600.0, 1.0], [42000.0, 1.0], [42400.0, 2.0], [45200.0, 2.0], [46800.0, 1.0], [47200.0, 1.0], [48000.0, 1.0], [48400.0, 1.0], [52000.0, 1.0], [55200.0, 1.0], [53600.0, 1.0], [57200.0, 2.0], [57600.0, 1.0], [58000.0, 2.0], [59200.0, 1.0], [60000.0, 1.0], [60400.0, 1.0], [60800.0, 6.0], [61200.0, 5.0], [61600.0, 2.0], [62000.0, 3.0], [62400.0, 5.0], [62800.0, 1.0], [63200.0, 3.0], [63600.0, 6.0], [64000.0, 1.0], [64400.0, 3.0], [64800.0, 1.0], [65200.0, 1.0], [65600.0, 1.0], [66400.0, 1.0], [67200.0, 2.0], [68000.0, 2.0], [68800.0, 2.0], [66300.0, 4.0], [67900.0, 1.0], [68700.0, 2.0], [33100.0, 1.0], [36300.0, 1.0], [35900.0, 1.0], [37900.0, 1.0], [39500.0, 1.0], [40300.0, 1.0], [40700.0, 1.0], [42300.0, 1.0], [41100.0, 1.0], [43100.0, 2.0], [45100.0, 1.0], [45900.0, 1.0], [47100.0, 2.0], [47900.0, 2.0], [48300.0, 1.0], [51500.0, 1.0], [51900.0, 1.0], [53900.0, 1.0], [54300.0, 2.0], [55100.0, 1.0], [53500.0, 1.0], [56700.0, 1.0], [57900.0, 1.0], [59100.0, 1.0], [59500.0, 1.0], [59900.0, 1.0], [60300.0, 3.0], [60700.0, 4.0], [61100.0, 1.0], [61500.0, 3.0], [61900.0, 3.0], [62300.0, 2.0], [62700.0, 2.0], [63100.0, 5.0], [63900.0, 3.0], [64300.0, 4.0], [64700.0, 2.0], [65100.0, 1.0], [65500.0, 3.0], [66200.0, 4.0], [67000.0, 2.0], [67800.0, 3.0], [68600.0, 2.0], [66100.0, 3.0], [66900.0, 2.0], [67700.0, 1.0], [68500.0, 1.0], [16700.0, 1.0], [16500.0, 1.0], [17100.0, 1.0], [17300.0, 1.0], [18100.0, 2.0], [17500.0, 2.0], [18500.0, 1.0], [18700.0, 2.0], [19100.0, 1.0], [19700.0, 2.0], [19900.0, 1.0], [20300.0, 1.0], [20700.0, 1.0], [21500.0, 1.0], [22900.0, 2.0], [23300.0, 2.0], [24500.0, 1.0], [24900.0, 2.0], [26500.0, 1.0], [26700.0, 3.0], [27100.0, 1.0], [27500.0, 1.0], [27300.0, 1.0], [27900.0, 1.0], [28100.0, 2.0], [28500.0, 1.0], [27700.0, 1.0], [29300.0, 1.0], [29500.0, 2.0], [30700.0, 1.0], [30500.0, 1.0], [29900.0, 1.0], [30900.0, 1.0], [31500.0, 3.0], [33400.0, 1.0], [34600.0, 2.0], [35800.0, 2.0], [36600.0, 3.0], [35400.0, 1.0], [37000.0, 2.0], [37400.0, 1.0], [38600.0, 1.0], [40200.0, 1.0], [40600.0, 1.0], [41000.0, 1.0], [41400.0, 1.0], [42200.0, 1.0], [43000.0, 4.0], [43800.0, 3.0], [47000.0, 1.0], [47400.0, 1.0], [47800.0, 1.0], [49000.0, 1.0], [49400.0, 3.0], [50200.0, 1.0], [50600.0, 1.0], [51000.0, 1.0], [51400.0, 1.0], [52200.0, 1.0], [52600.0, 2.0], [51800.0, 1.0], [53800.0, 1.0], [55400.0, 1.0], [55800.0, 1.0], [56600.0, 1.0], [57400.0, 1.0], [57800.0, 1.0], [59800.0, 2.0], [60200.0, 2.0], [60600.0, 1.0], [61000.0, 6.0], [61800.0, 3.0], [62200.0, 1.0], [62600.0, 4.0], [63000.0, 2.0], [63400.0, 3.0], [63800.0, 2.0], [64200.0, 3.0], [64600.0, 3.0], [65000.0, 6.0], [65400.0, 3.0], [66000.0, 4.0], [66800.0, 6.0], [67600.0, 2.0], [68400.0, 2.0]], "isOverall": false, "label": "Get All Users", "isController": false}, {"data": [[0.0, 156.0], [100.0, 576.0], [33900.0, 1.0], [33100.0, 1.0], [36100.0, 1.0], [38100.0, 1.0], [37300.0, 2.0], [39300.0, 2.0], [40700.0, 1.0], [42700.0, 1.0], [41900.0, 1.0], [44700.0, 1.0], [43700.0, 1.0], [48500.0, 1.0], [47900.0, 1.0], [200.0, 149.0], [52900.0, 2.0], [51500.0, 2.0], [54300.0, 2.0], [54700.0, 1.0], [55300.0, 1.0], [55900.0, 1.0], [56300.0, 1.0], [56900.0, 1.0], [57300.0, 1.0], [57900.0, 1.0], [58300.0, 3.0], [58500.0, 1.0], [58700.0, 1.0], [58900.0, 1.0], [59300.0, 1.0], [59900.0, 1.0], [60300.0, 2.0], [60100.0, 1.0], [60900.0, 2.0], [61300.0, 1.0], [61100.0, 1.0], [300.0, 41.0], [400.0, 23.0], [500.0, 23.0], [600.0, 13.0], [700.0, 10.0], [800.0, 2.0], [900.0, 2.0], [1000.0, 1.0], [1100.0, 2.0], [1200.0, 1.0], [1300.0, 1.0], [1600.0, 1.0], [14300.0, 1.0], [14400.0, 1.0], [14600.0, 1.0], [14800.0, 1.0], [15000.0, 1.0], [16200.0, 1.0], [15900.0, 2.0], [17100.0, 1.0], [17400.0, 1.0], [17300.0, 1.0], [17800.0, 1.0], [18000.0, 1.0], [18600.0, 1.0], [19400.0, 1.0], [19800.0, 1.0], [20200.0, 2.0], [20500.0, 1.0], [21200.0, 1.0], [20700.0, 2.0], [22200.0, 1.0], [21700.0, 1.0], [23900.0, 1.0], [25400.0, 1.0], [25900.0, 1.0], [26000.0, 1.0], [26900.0, 1.0], [27300.0, 1.0], [27600.0, 1.0], [28500.0, 1.0], [28700.0, 1.0], [30700.0, 1.0], [31100.0, 1.0], [31800.0, 3.0], [34000.0, 1.0], [33200.0, 1.0], [36800.0, 1.0], [35800.0, 1.0], [39400.0, 1.0], [40600.0, 1.0], [41400.0, 1.0], [42400.0, 1.0], [41200.0, 1.0], [42000.0, 1.0], [45000.0, 1.0], [44000.0, 1.0], [46800.0, 1.0], [47000.0, 1.0], [48000.0, 1.0], [48200.0, 1.0], [49600.0, 1.0], [51200.0, 1.0], [53400.0, 1.0], [55200.0, 1.0], [55800.0, 1.0], [55400.0, 1.0], [56000.0, 2.0], [56600.0, 3.0], [57200.0, 1.0], [57400.0, 1.0], [58000.0, 1.0], [58800.0, 1.0], [59000.0, 1.0], [59600.0, 1.0], [59400.0, 1.0], [60200.0, 1.0], [60800.0, 1.0], [61400.0, 1.0], [61000.0, 2.0], [62000.0, 1.0]], "isOverall": false, "label": "Get All Posts", "isController": false}, {"data": [[0.0, 173.0], [600.0, 5.0], [700.0, 5.0], [800.0, 3.0], [900.0, 1.0], [15000.0, 3.0], [17000.0, 1.0], [18000.0, 1.0], [18900.0, 2.0], [19600.0, 1.0], [20700.0, 1.0], [22500.0, 1.0], [24700.0, 1.0], [100.0, 599.0], [25700.0, 1.0], [27600.0, 2.0], [28600.0, 1.0], [29200.0, 1.0], [30600.0, 1.0], [31300.0, 1.0], [32200.0, 1.0], [31900.0, 1.0], [34500.0, 1.0], [36600.0, 2.0], [36100.0, 1.0], [35900.0, 1.0], [35300.0, 1.0], [38500.0, 3.0], [37600.0, 1.0], [37500.0, 1.0], [39100.0, 1.0], [40700.0, 1.0], [39700.0, 1.0], [42400.0, 1.0], [42600.0, 1.0], [43900.0, 1.0], [43100.0, 1.0], [46600.0, 2.0], [45200.0, 1.0], [48900.0, 2.0], [49400.0, 1.0], [200.0, 129.0], [51500.0, 1.0], [52600.0, 1.0], [55100.0, 1.0], [53600.0, 1.0], [60400.0, 1.0], [60700.0, 1.0], [61200.0, 1.0], [62000.0, 1.0], [300.0, 34.0], [400.0, 8.0], [500.0, 16.0]], "isOverall": false, "label": "Get All Comments", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 69100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4013.0, "series": [{"data": [[0.0, 490.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 33.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 4013.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 10.365269461077846, "minX": 1.69355316E12, "maxY": 500.0, "series": [{"data": [[1.69355316E12, 500.0], [1.69355322E12, 424.9987966305656]], "isOverall": false, "label": "bzm - Concurrency Thread Group-ThreadStarter", "isController": false}, {"data": [[1.69355316E12, 18.863013698630134], [1.69355322E12, 10.365269461077846]], "isOverall": false, "label": "Stress Test", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69355322E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 87.0, "minX": 1.0, "maxY": 69157.0, "series": [{"data": [[5.0, 16062.0], [6.0, 16705.0], [12.0, 18587.0], [16.0, 20872.0], [20.0, 21282.0], [27.0, 23337.0], [28.0, 24594.0], [33.0, 25994.0], [39.0, 26938.0], [38.0, 26636.0], [43.0, 16276.0], [47.0, 29166.0], [49.0, 29919.0], [51.0, 30543.0], [53.0, 16985.0], [54.0, 30577.0], [57.0, 31892.0], [61.0, 31858.0], [62.0, 32520.0], [67.0, 33156.0], [65.0, 151.0], [75.0, 35920.0], [79.0, 27303.0], [76.0, 35213.0], [81.0, 36626.0], [80.0, 27376.0], [97.0, 40573.0], [103.0, 101.0], [101.0, 30595.0], [106.0, 32594.5], [104.0, 41025.0], [111.0, 33964.0], [110.0, 41933.0], [114.0, 34871.0], [113.0, 34419.0], [116.0, 34835.0], [122.0, 41847.0], [120.0, 111.0], [126.0, 36122.0], [125.0, 41844.0], [135.0, 93.0], [130.0, 110.0], [128.0, 153.0], [147.0, 98.0], [144.0, 38617.0], [153.0, 43142.5], [164.0, 43643.0], [163.0, 43623.0], [173.0, 44070.0], [169.0, 48460.0], [181.0, 50187.0], [179.0, 46643.0], [176.0, 49104.0], [190.0, 51295.0], [188.0, 47776.0], [198.0, 52477.0], [207.0, 53626.0], [203.0, 156.0], [200.0, 52420.0], [221.0, 92.0], [216.0, 53629.0], [229.0, 60160.0], [226.0, 59655.0], [239.0, 100.0], [236.0, 102.0], [235.0, 130.0], [234.0, 61693.0], [233.0, 60399.0], [245.0, 96.0], [250.0, 93.0], [249.0, 125.0], [271.0, 94.0], [264.0, 92.0], [262.0, 95.0], [258.0, 110.0], [287.0, 94.0], [283.0, 94.0], [276.0, 96.0], [303.0, 91.0], [296.0, 100.0], [294.0, 113.0], [315.0, 91.0], [324.0, 92.0], [349.0, 104.0], [336.0, 90.0], [365.0, 94.0], [355.0, 104.0], [380.0, 92.0], [411.0, 96.0], [431.0, 101.0], [423.0, 152.0], [443.0, 135.0], [435.0, 116.0], [448.0, 114.0], [490.0, 105.0], [510.0, 123.0], [509.0, 230.0], [502.0, 424.0], [520.0, 192.08300395256927], [519.0, 154.56020942408375], [518.0, 150.0625], [517.0, 163.16071428571428], [516.0, 387.67932489451476], [514.0, 124.0], [1.0, 16066.0]], "isOverall": false, "label": "Get All To-dos", "isController": false}, {"data": [[483.46823770491886, 2462.248975409836]], "isOverall": false, "label": "Get All To-dos-Aggregated", "isController": false}, {"data": [[3.0, 16067.0], [8.0, 17379.0], [13.0, 20230.0], [14.0, 20813.0], [23.0, 23400.0], [24.0, 23414.0], [25.0, 23358.0], [30.0, 24981.0], [33.0, 25403.0], [35.0, 26708.0], [34.0, 26828.0], [42.0, 27340.0], [44.0, 29472.0], [46.0, 16348.0], [53.0, 17596.0], [55.0, 17593.0], [56.0, 29934.0], [63.0, 19696.0], [70.0, 33247.0], [68.0, 20336.0], [74.0, 35681.0], [73.0, 21624.0], [78.0, 27478.0], [77.0, 21648.0], [83.0, 39395.0], [86.0, 37904.0], [95.0, 40623.0], [92.0, 144.0], [103.0, 31297.0], [100.0, 29897.0], [110.0, 41112.0], [118.0, 35477.0], [123.0, 35976.0], [120.0, 104.0], [133.0, 99.0], [129.0, 37055.0], [143.0, 39374.0], [141.0, 43768.0], [140.0, 43096.0], [136.0, 43199.0], [149.0, 40791.0], [146.0, 43165.0], [145.0, 207.0], [159.0, 41351.0], [156.0, 45345.0], [154.0, 44160.0], [166.0, 47128.0], [162.0, 42415.0], [160.0, 45332.0], [175.0, 49031.0], [173.0, 48361.0], [168.0, 43819.0], [191.0, 48540.0], [189.0, 51375.0], [184.0, 51370.0], [199.0, 51075.0], [196.0, 52657.0], [195.0, 48991.0], [193.0, 52023.0], [192.0, 51862.0], [205.0, 51725.0], [203.0, 50973.0], [213.0, 53532.0], [210.0, 52117.0], [209.0, 53665.0], [231.0, 69157.0], [230.0, 30176.0], [229.0, 69155.0], [224.0, 56798.0], [238.0, 68939.0], [237.0, 69013.0], [235.0, 68973.0], [233.0, 69127.0], [247.0, 68483.0], [245.0, 22933.333333333332], [244.0, 68802.0], [243.0, 68769.0], [242.0, 68842.0], [241.0, 68793.0], [240.0, 68681.0], [254.0, 68254.0], [253.0, 68249.0], [252.0, 68381.0], [251.0, 68252.0], [250.0, 68373.0], [249.0, 34270.0], [259.0, 34041.0], [270.0, 67561.0], [269.0, 66459.0], [267.0, 67884.0], [265.0, 67797.0], [263.0, 68035.0], [261.0, 68076.0], [258.0, 68191.0], [256.0, 34179.0], [275.0, 67565.0], [286.0, 67061.0], [287.0, 67001.0], [285.0, 97.0], [283.0, 67278.0], [280.0, 67299.0], [279.0, 67327.0], [278.0, 123.0], [274.0, 67648.0], [273.0, 44225.333333333336], [272.0, 67644.0], [302.0, 66621.0], [303.0, 66482.0], [301.0, 33344.5], [300.0, 66679.0], [298.0, 64807.5], [297.0, 66806.0], [296.0, 66703.0], [295.0, 66788.0], [291.0, 33464.5], [290.0, 66895.0], [289.0, 66945.0], [288.0, 66983.0], [293.0, 66834.0], [318.0, 66129.0], [319.0, 65817.0], [317.0, 66073.0], [316.0, 66048.0], [315.0, 66230.0], [314.0, 66275.0], [313.0, 66178.0], [312.0, 66194.0], [311.0, 33167.5], [307.0, 66510.0], [306.0, 66309.0], [310.0, 66339.0], [309.0, 66332.0], [308.0, 66317.0], [334.0, 65532.0], [335.0, 32767.5], [333.0, 65571.0], [323.0, 65945.0], [322.0, 65896.0], [321.0, 66077.0], [320.0, 66088.0], [331.0, 65483.0], [330.0, 65643.0], [329.0, 65590.0], [328.0, 65716.0], [326.0, 64134.0], [325.0, 65742.0], [350.0, 64919.0], [351.0, 65022.0], [349.0, 65159.0], [348.0, 65007.0], [347.0, 65051.0], [346.0, 65050.0], [344.0, 32587.0], [342.0, 65321.0], [336.0, 65391.0], [338.0, 65482.0], [337.0, 65353.0], [341.0, 65262.0], [340.0, 65336.0], [366.0, 64472.0], [365.0, 64438.0], [353.0, 64932.0], [352.0, 64789.0], [363.0, 43103.666666666664], [361.0, 64238.0], [360.0, 64782.0], [359.0, 64801.0], [358.0, 64690.0], [357.0, 64609.0], [356.0, 64905.0], [381.0, 63772.0], [382.0, 63864.0], [380.0, 64102.0], [371.0, 64361.0], [370.0, 64333.0], [369.0, 64440.0], [368.0, 64456.0], [379.0, 63902.0], [378.0, 63907.0], [377.0, 64225.0], [376.0, 64110.0], [375.0, 32157.0], [374.0, 64258.0], [373.0, 64092.0], [372.0, 64326.0], [387.0, 63705.0], [399.0, 63399.0], [397.0, 63527.0], [395.0, 63619.0], [394.0, 63475.0], [392.0, 63051.666666666664], [390.0, 63664.0], [388.0, 63657.0], [386.0, 63719.0], [384.0, 63923.0], [414.0, 63129.0], [415.0, 63125.0], [413.0, 63120.0], [410.0, 63008.0], [409.0, 63051.0], [408.0, 63290.0], [406.0, 63169.0], [404.0, 63310.0], [403.0, 63259.0], [402.0, 63170.0], [401.0, 63239.0], [400.0, 63376.0], [430.0, 62440.0], [431.0, 31257.5], [429.0, 62548.0], [427.0, 41709.666666666664], [425.0, 62485.0], [424.0, 62634.0], [423.0, 62650.0], [421.0, 62693.0], [419.0, 62909.0], [418.0, 62901.5], [416.0, 62923.0], [446.0, 61920.0], [444.0, 61845.0], [443.0, 31127.5], [442.0, 62153.0], [441.0, 62050.0], [439.0, 62187.0], [438.0, 95.0], [437.0, 62377.0], [434.0, 62259.0], [432.0, 62467.0], [450.0, 61655.5], [463.0, 61359.0], [462.0, 61174.6], [457.0, 61627.0], [456.0, 61556.0], [455.0, 61714.0], [453.0, 61704.666666666664], [449.0, 61821.0], [448.0, 61971.5], [478.0, 60983.0], [479.0, 60800.0], [477.0, 61019.0], [476.0, 60867.0], [475.0, 60897.0], [474.0, 61075.0], [473.0, 60859.0], [472.0, 61045.0], [471.0, 61192.0], [467.0, 61268.0], [466.0, 61091.0], [465.0, 61276.0], [464.0, 61281.0], [470.0, 61078.0], [483.0, 60801.0], [494.0, 60514.0], [495.0, 60336.0], [493.0, 60569.0], [491.0, 60446.0], [488.0, 60720.0], [487.0, 60789.0], [486.0, 60813.0], [484.0, 60645.0], [482.0, 60709.0], [481.0, 60713.0], [480.0, 60974.0], [510.0, 376.0], [508.0, 428.0], [505.0, 531.0], [502.0, 60175.666666666664], [498.0, 60385.0], [497.0, 60116.0], [496.0, 60310.0], [520.0, 3969.9808219178067], [519.0, 6701.878378378378], [518.0, 7378.408602150539], [517.0, 9052.94814814815], [516.0, 11593.531135531133], [515.0, 59805.0], [514.0, 59953.0]], "isOverall": false, "label": "Get All Users", "isController": false}, {"data": [[471.6888260254595, 17959.099009900983]], "isOverall": false, "label": "Get All Users-Aggregated", "isController": false}, {"data": [[2.0, 15998.0], [5.0, 15968.0], [7.0, 17369.0], [9.0, 17471.0], [10.0, 18086.0], [15.0, 20788.0], [18.0, 20762.0], [19.0, 21275.0], [22.0, 21769.0], [26.0, 23988.0], [36.0, 15058.0], [46.0, 14824.0], [48.0, 16266.0], [58.0, 31870.0], [67.0, 20278.0], [69.0, 33186.0], [72.0, 20248.0], [86.0, 163.0], [84.0, 27631.0], [90.0, 37311.0], [89.0, 37337.0], [95.0, 28505.0], [93.0, 28721.0], [92.0, 40624.0], [107.0, 33290.0], [108.0, 34046.0], [115.0, 41957.0], [119.0, 35851.0], [116.0, 100.0], [127.0, 36121.0], [135.0, 146.0], [133.0, 36895.0], [132.0, 42771.0], [131.0, 42026.0], [129.0, 87.0], [142.0, 43716.0], [140.0, 100.0], [138.0, 38151.0], [151.0, 40769.0], [150.0, 44094.0], [145.0, 39350.0], [157.0, 42416.0], [155.0, 43150.5], [171.0, 44772.0], [168.0, 47069.0], [183.0, 46829.0], [182.0, 51564.0], [188.0, 48551.0], [186.0, 51298.0], [185.0, 47911.0], [198.0, 49640.0], [206.0, 51538.0], [205.0, 52973.0], [214.0, 59040.0], [212.0, 52920.0], [211.0, 58722.0], [223.0, 56630.0], [222.0, 56078.0], [219.0, 60305.0], [217.0, 55494.0], [216.0, 59329.0], [229.0, 96.0], [225.0, 62070.0], [238.0, 93.0], [245.0, 100.0], [244.0, 111.0], [252.0, 121.0], [251.0, 61191.0], [249.0, 61478.0], [269.0, 127.5], [264.0, 156.0], [262.0, 61357.0], [260.0, 61040.0], [257.0, 60951.0], [256.0, 30570.5], [285.0, 60259.0], [283.0, 30178.5], [278.0, 60975.0], [276.0, 60855.0], [275.0, 100.0], [301.0, 168.0], [298.0, 95.0], [294.0, 154.0], [293.0, 59909.0], [288.0, 103.0], [308.0, 93.0], [305.0, 59675.0], [304.0, 59491.0], [332.0, 58803.0], [330.0, 96.0], [328.0, 58991.0], [321.0, 151.0], [346.0, 58318.0], [343.0, 58395.0], [342.0, 96.0], [339.0, 58519.0], [364.0, 57971.0], [361.0, 58029.0], [360.0, 93.0], [356.0, 190.0], [354.0, 58304.0], [371.0, 94.0], [399.0, 57318.0], [390.0, 57424.0], [385.0, 28707.5], [413.0, 56627.0], [407.0, 56954.0], [406.0, 56618.0], [429.0, 93.0], [425.0, 108.0], [442.0, 117.0], [438.0, 55812.0], [437.0, 91.0], [436.0, 56018.0], [435.0, 55990.0], [434.0, 56392.0], [455.0, 27788.5], [449.0, 170.0], [470.0, 55242.0], [493.0, 54312.0], [489.0, 54373.0], [486.0, 54723.0], [508.0, 277.0], [505.0, 419.5], [496.0, 108.0], [520.0, 571.1840277777776], [519.0, 1141.6342592592591], [518.0, 1510.8369565217401], [517.0, 1061.4263565891474], [516.0, 897.5589353612164], [512.0, 148.0]], "isOverall": false, "label": "Get All Posts", "isController": false}, {"data": [[485.4572192513373, 4706.6559714795]], "isOverall": false, "label": "Get All Posts-Aggregated", "isController": false}, {"data": [[520.0, 177.05204460966533], [519.0, 154.0873786407767], [518.0, 873.8735632183908], [517.0, 174.00799999999992], [516.0, 165.57831325301214], [512.0, 144.5], [11.0, 18081.0], [17.0, 20790.0], [22.0, 22578.0], [29.0, 24782.0], [31.0, 25734.0], [38.0, 15050.0], [41.0, 15014.0], [51.0, 17011.0], [59.0, 18937.0], [60.0, 18963.0], [65.0, 19649.0], [71.0, 34590.0], [72.0, 135.0], [83.0, 36636.0], [87.0, 28624.0], [85.0, 27637.0], [91.0, 39729.0], [88.0, 27628.0], [99.0, 35701.0], [97.0, 29205.0], [103.0, 31909.0], [107.0, 151.0], [117.0, 35325.0], [121.0, 35929.0], [125.0, 36109.0], [135.0, 37645.0], [134.0, 18822.5], [131.0, 42666.0], [128.0, 18366.5], [140.0, 38544.0], [139.0, 38572.0], [138.0, 141.0], [137.0, 43188.0], [151.0, 195.0], [148.0, 39105.0], [147.0, 38570.0], [158.0, 42485.0], [161.0, 45287.0], [174.0, 48960.0], [170.0, 43917.0], [180.0, 49439.0], [179.0, 46660.0], [177.0, 46651.0], [194.0, 48906.0], [201.0, 52605.0], [209.0, 53619.0], [208.0, 51551.0], [220.0, 62039.0], [219.0, 61282.0], [224.0, 90.0], [238.0, 93.0], [237.0, 94.0], [245.0, 98.0], [252.0, 144.0], [250.0, 102.0], [249.0, 187.0], [268.0, 30429.5], [264.0, 95.0], [262.0, 92.0], [285.0, 97.0], [278.0, 97.0], [277.0, 60427.0], [274.0, 107.0], [298.0, 93.0], [296.0, 99.0], [290.0, 103.0], [317.0, 93.0], [307.0, 95.0], [328.0, 100.0], [350.0, 105.0], [338.0, 94.0], [357.0, 93.0], [382.0, 95.0], [370.0, 97.0], [425.0, 93.0], [416.0, 302.0], [444.0, 106.0], [437.0, 121.0], [432.0, 102.0], [462.0, 55151.0], [450.0, 106.0], [496.0, 93.0]], "isOverall": false, "label": "Get All Comments", "isController": false}, {"data": [[490.9356097560975, 2020.8829268292689]], "isOverall": false, "label": "Get All Comments-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 520.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 6725.233333333334, "minX": 1.69355316E12, "maxY": 64767.23333333333, "series": [{"data": [[1.69355316E12, 64767.23333333333], [1.69355322E12, 38212.7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69355316E12, 9961.683333333332], [1.69355322E12, 6725.233333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69355322E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 171.04492512479197, "minX": 1.69355316E12, "maxY": 32550.14218750002, "series": [{"data": [[1.69355316E12, 171.04492512479197], [1.69355322E12, 6134.285333333333]], "isOverall": false, "label": "Get All To-dos", "isController": false}, {"data": [[1.69355316E12, 5894.153746770032], [1.69355322E12, 32550.14218750002]], "isOverall": false, "label": "Get All Users", "isController": false}, {"data": [[1.69355316E12, 872.3833819241978], [1.69355322E12, 10739.479357798167]], "isOverall": false, "label": "Get All Posts", "isController": false}, {"data": [[1.69355316E12, 262.11437403400345], [1.69355322E12, 5031.261904761904]], "isOverall": false, "label": "Get All Comments", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69355322E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 170.68718801996667, "minX": 1.69355316E12, "maxY": 32549.782812499994, "series": [{"data": [[1.69355316E12, 170.68718801996667], [1.69355322E12, 6133.832000000001]], "isOverall": false, "label": "Get All To-dos", "isController": false}, {"data": [[1.69355316E12, 5892.713178294574], [1.69355322E12, 32549.782812499994]], "isOverall": false, "label": "Get All Users", "isController": false}, {"data": [[1.69355316E12, 871.8906705539349], [1.69355322E12, 10739.077981651377]], "isOverall": false, "label": "Get All Posts", "isController": false}, {"data": [[1.69355316E12, 261.7449768160738], [1.69355322E12, 5030.857142857145]], "isOverall": false, "label": "Get All Comments", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69355322E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69355316E12, "maxY": 2890.590625000002, "series": [{"data": [[1.69355316E12, 0.0], [1.69355322E12, 0.29600000000000004]], "isOverall": false, "label": "Get All To-dos", "isController": false}, {"data": [[1.69355316E12, 1584.383720930233], [1.69355322E12, 2890.590625000002]], "isOverall": false, "label": "Get All Users", "isController": false}, {"data": [[1.69355316E12, 0.0], [1.69355322E12, 1.4954128440366974]], "isOverall": false, "label": "Get All Posts", "isController": false}, {"data": [[1.69355316E12, 0.0], [1.69355322E12, 0.32010582010582]], "isOverall": false, "label": "Get All Comments", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69355322E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 124.0, "minX": 1.69355316E12, "maxY": 1689.0, "series": [{"data": [[1.69355316E12, 1689.0], [1.69355322E12, 763.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69355316E12, 434.2000000000001], [1.69355322E12, 361.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69355316E12, 1015.6000000000039], [1.69355322E12, 744.0999999999992]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69355316E12, 618.1999999999995], [1.69355322E12, 500.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69355316E12, 124.0], [1.69355322E12, 125.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69355316E12, 268.0], [1.69355322E12, 256.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69355322E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 125.0, "minX": 2.0, "maxY": 64343.0, "series": [{"data": [[34.0, 207.0], [36.0, 337.0], [37.0, 261.0], [39.0, 521.0], [38.0, 288.0], [40.0, 152.0], [43.0, 135.0], [45.0, 207.0], [44.0, 193.0], [46.0, 313.0], [47.0, 144.0], [51.0, 288.0], [52.0, 141.0], [53.0, 125.0], [58.0, 263.0], [61.0, 326.0], [60.0, 296.5], [63.0, 216.0], [66.0, 246.5], [71.0, 269.0], [70.0, 282.0], [68.0, 246.0], [74.0, 305.5], [75.0, 255.0], [72.0, 220.5], [73.0, 169.0], [79.0, 266.0], [76.0, 273.0], [77.0, 226.0], [80.0, 264.0], [83.0, 269.0], [84.0, 260.0], [85.0, 235.5], [87.0, 194.0], [86.0, 275.0], [88.0, 241.5], [93.0, 152.0], [29.0, 344.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 10509.5], [35.0, 53629.0], [34.0, 43165.0], [36.0, 5491.5], [37.0, 63376.0], [39.0, 58395.0], [38.0, 11258.0], [40.0, 23400.0], [43.0, 61365.5], [45.0, 7309.0], [44.0, 64343.0], [46.0, 199.5], [47.0, 61116.5], [51.0, 148.5], [52.0, 60855.0], [53.0, 35664.0], [58.0, 154.0], [61.0, 142.5], [60.0, 131.5], [63.0, 137.0], [62.0, 29185.5], [66.0, 137.5], [71.0, 130.0], [70.0, 154.0], [68.0, 146.0], [74.0, 158.0], [75.0, 138.5], [72.0, 140.0], [73.0, 140.0], [79.0, 135.0], [76.0, 142.5], [77.0, 128.5], [80.0, 136.5], [83.0, 131.0], [84.0, 133.5], [85.0, 140.0], [87.0, 142.5], [86.0, 132.0], [88.0, 139.5], [93.0, 145.5], [29.0, 48906.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 93.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 124.0, "minX": 2.0, "maxY": 64343.0, "series": [{"data": [[34.0, 207.0], [36.0, 336.0], [37.0, 260.5], [39.0, 468.5], [38.0, 288.0], [40.0, 152.0], [43.0, 135.0], [45.0, 206.5], [44.0, 192.5], [46.0, 312.5], [47.0, 144.0], [51.0, 288.0], [52.0, 141.0], [53.0, 124.0], [58.0, 262.0], [61.0, 325.0], [60.0, 296.0], [63.0, 208.0], [66.0, 246.0], [71.0, 268.5], [70.0, 282.0], [68.0, 245.0], [74.0, 305.0], [75.0, 255.0], [72.0, 219.5], [73.0, 169.0], [79.0, 266.0], [76.0, 273.0], [77.0, 226.0], [80.0, 263.5], [83.0, 269.0], [84.0, 259.0], [85.0, 235.5], [87.0, 194.0], [86.0, 274.5], [88.0, 241.5], [93.0, 151.0], [29.0, 344.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 10509.0], [35.0, 53629.0], [34.0, 43165.0], [36.0, 5491.5], [37.0, 63376.0], [39.0, 58395.0], [38.0, 11258.0], [40.0, 23400.0], [43.0, 61365.5], [45.0, 7253.0], [44.0, 64343.0], [46.0, 199.0], [47.0, 61116.5], [51.0, 147.5], [52.0, 60855.0], [53.0, 35664.0], [58.0, 154.0], [61.0, 142.0], [60.0, 130.0], [63.0, 135.0], [62.0, 29185.0], [66.0, 137.5], [71.0, 129.5], [70.0, 153.0], [68.0, 146.0], [74.0, 158.0], [75.0, 138.0], [72.0, 140.0], [73.0, 140.0], [79.0, 135.0], [76.0, 142.5], [77.0, 128.0], [80.0, 136.0], [83.0, 130.0], [84.0, 133.0], [85.0, 139.0], [87.0, 142.5], [86.0, 132.0], [88.0, 139.5], [93.0, 145.5], [29.0, 48906.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 93.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 21.866666666666667, "minX": 1.69355316E12, "maxY": 53.75, "series": [{"data": [[1.69355316E12, 53.75], [1.69355322E12, 21.866666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69355322E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.95, "minX": 1.69355316E12, "maxY": 36.88333333333333, "series": [{"data": [[1.69355316E12, 8.25], [1.69355322E12, 2.95]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.69355316E12, 36.88333333333333], [1.69355322E12, 27.533333333333335]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69355322E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.69355316E12, "maxY": 11.533333333333333, "series": [{"data": [[1.69355316E12, 9.6], [1.69355322E12, 6.666666666666667]], "isOverall": false, "label": "Get All Posts-failure", "isController": false}, {"data": [[1.69355316E12, 1.6333333333333333], [1.69355322E12, 0.5]], "isOverall": false, "label": "Get All To-dos-success", "isController": false}, {"data": [[1.69355316E12, 8.383333333333333], [1.69355322E12, 5.75]], "isOverall": false, "label": "Get All To-dos-failure", "isController": false}, {"data": [[1.69355316E12, 1.3666666666666667], [1.69355322E12, 0.4666666666666667]], "isOverall": false, "label": "Get All Users-success", "isController": false}, {"data": [[1.69355316E12, 1.75], [1.69355322E12, 0.5833333333333334]], "isOverall": false, "label": "Get All Comments-success", "isController": false}, {"data": [[1.69355316E12, 11.533333333333333], [1.69355322E12, 10.2]], "isOverall": false, "label": "Get All Users-failure", "isController": false}, {"data": [[1.69355316E12, 9.033333333333333], [1.69355322E12, 5.716666666666667]], "isOverall": false, "label": "Get All Comments-failure", "isController": false}, {"data": [[1.69355316E12, 1.8333333333333333], [1.69355322E12, 0.6]], "isOverall": false, "label": "Get All Posts-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69355322E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.15, "minX": 1.69355316E12, "maxY": 38.55, "series": [{"data": [[1.69355316E12, 6.583333333333333], [1.69355322E12, 2.15]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.69355316E12, 38.55], [1.69355322E12, 28.333333333333332]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69355322E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

